@using Memorabilia.Domain.Constants

<InputSelect id="basketballType" class="form-control" @bind-Value="@Value" @oninput="@OnInputChange" >
    <option value="0">--Select--</option>
    @foreach (var basketballType in _basketballTypes)
    {
        <option value="@basketballType.Id">@basketballType.Name</option>
    }
</InputSelect>

@code {
    [Parameter]
    public GameStyleType GameStyleType
    {
        get
        {
            return _gameStyleType;
        }
        set
        {
            _gameStyleType = value;
            _basketballTypes = value != null ? BasketballType.GetAll(GameStyleType.Find(value.Id)) : BasketballType.All;
        }
    }

    [Parameter]
    public int Value { get; set; }

    [Parameter]
    public EventCallback<int> ValueChanged { get; set; }

    private BasketballType[] _basketballTypes;
    private GameStyleType _gameStyleType;

    protected override Task OnInitializedAsync()
    {
        _basketballTypes = BasketballType.GetAll(GameStyleType);

        return base.OnInitializedAsync();
    }

    public void Reload(int gameStyleTypeId)
    {
        _basketballTypes = BasketballType.GetAll(GameStyleType.Find(gameStyleTypeId));
    }

    private async Task OnInputChange(ChangeEventArgs args)
    {
        Value = Convert.ToInt32(args.Value);
        await ValueChanged.InvokeAsync(Value).ConfigureAwait(false);
    }
}

