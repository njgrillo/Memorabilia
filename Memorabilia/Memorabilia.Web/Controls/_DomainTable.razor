@using Memorabilia.Application.Features.Admin

@inject NavigationManager _navigation
@inject IToastService _toastService

<_Page @ref="_page" 
       ConfirmationTitle="@_confirmationTitle" 
       OnConfirm="OnConfirm">
    <Content>
        <div class="row">
            <div class="col-md-12" style="text-align: center">
                <h1>@DomainItemTitle</h1>
            </div>
        </div>
        <br />
        <_Table Items="DomainEntities" 
                ItemsPerPage="10"                     
                TItem="DomainViewModel">
            <HeaderTemplate>
                <th scope="col">Name</th>
                <th scope="col">Abbreviation</th>
                <th scope="col"></th>
                <th scope="col"></th>
            </HeaderTemplate>
            <RowTemplate>
                <td>@context.Name</td>
                <td>@context.Abbreviation</td>
                <td>
                    <_Tooltip Text="Edit">
                        <img class="can-click" 
                                src="images/pencil.png" 
                                height="25" 
                                width="25" 
                                @onclick="@(_ => _navigation.NavigateTo($"{RoutePrefix}/Edit/{context.Id}"))" />
                    </_Tooltip>                        
                </td>
                <td>
                    <_Tooltip Text="Delete">
                        <img class="can-click" 
                                src="images/trash.png" 
                                height="25" 
                                width="25" 
                                @onclick="@(_ => _page.ShowConfirm(context.Id))" />
                    </_Tooltip>
                </td>
            </RowTemplate>
        </_Table>
        <div class="row">
            <div class="col-md-12" style="text-align: center">
                <div class="col-md-12" style="text-align: center">
                    <a href="@_addRoute">Add @DomainItemName</a>
                </div>
            </div>
        </div>
        <br />
    </Content>
</_Page>

@code {
    [Parameter]
    public List<DomainViewModel> DomainEntities { get; set; }

    [Parameter]
    public string DomainItemName { get; set; }

    [Parameter]
    public string DomainItemTitle { get; set; }

    [Parameter]
    public EventCallback<SaveDomainViewModel> OnDelete { get; set; }   

    [Parameter]
    public string RoutePrefix { get; set; }

    private string _addRoute => $"{RoutePrefix}/Edit/0";
    private string _confirmationTitle => $"Delete {DomainItemName}";
    private _Page _page;    

    protected async Task OnConfirm(int id)
    {
        var deletedItem = DomainEntities.Single(domainEntity => domainEntity.Id == id);
        var viewModel = new SaveDomainViewModel(deletedItem);
        viewModel.IsDeleted = true;

        DomainEntities.Remove(deletedItem);

        await OnDelete.InvokeAsync(viewModel).ConfigureAwait(false);

        _toastService.ShowSuccess($"{DomainItemName} was deleted successfully!", DomainItemTitle);               
    }   
}
