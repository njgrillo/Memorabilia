@using Memorabilia.Application.Features.Admin.Person
@using Memorabilia.Domain.Constants

@inject QueryRouter _queryRouter

<label for="sport">Sport</label>
<select class="form-control" value="@Sport" @onchange="OnSportChange">
    <option value="0">--Select--</option>
    @foreach (var sport in Sport.All)
    {
        <option value="@sport.Id">@sport.Name</option>
    }
</select> 
<InputSelect class="form-control" id="PersonDropDown" @bind-Value="@Value" @oninput="@OnInputChange">
    <option value="0">--Select--</option>
    @foreach (var person in _people)
    {
        <option value="@person.Id">@person.FullName</option>
    }
</InputSelect>

@code {
    [Parameter]
    public Sport Sport { get; set; }

    [Parameter]
    public int Value { get; set; }  

    [Parameter]
    public EventCallback<int> ValueChanged { get; set; }

    private IEnumerable<PersonViewModel> _people = Enumerable.Empty<PersonViewModel>();

    protected override async Task OnInitializedAsync()
    {
        await Load().ConfigureAwait(false);
    } 

    private async Task Load()
    {
        var query = new GetPeople.Query();

        _people = (await _queryRouter.Send(query).ConfigureAwait(false)).People;
    }

    private async Task OnInputChange(ChangeEventArgs args)
    {
        Value = Convert.ToInt32(args.Value);
        await ValueChanged.InvokeAsync(Value);
    }

    private void OnSportChange(ChangeEventArgs args)
    {
        Sport = Sport.Find(int.Parse(args.Value.ToString()));

        //Filter People
    }
}
