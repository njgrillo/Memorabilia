@using Memorabilia.Application.Features.Admin.ItemTypeLevel
@using Memorabilia.Application.Features.Admin.LevelType
@using Domain.Constants

@inject QueryRouter _queryRouter

<InputSelect id="ItemTypeLevelDropDown" class="form-control" @bind-Value="@Value" @oninput="@OnInputChange" >
    <option value="0">--Select--</option>
    @foreach (var itemTypeLevel in _itemTypeLevels)
    {
        <option value="@itemTypeLevel.LevelTypeId">@itemTypeLevel.LevelTypeName</option>
    }
</InputSelect>

@code {
    [Parameter]
    public LevelType InitialValue { get; set; }

    [Parameter]
    public ItemType ItemType { get; set; }

    [Parameter]
    public int Value { get; set; }

    [Parameter]
    public EventCallback<int> ValueChanged { get; set; }

    private IEnumerable<ItemTypeLevelViewModel> _itemTypeLevels = Enumerable.Empty<ItemTypeLevelViewModel>();

    protected override async Task OnInitializedAsync()
    {
        await Load().ConfigureAwait(false);

        if ((InitialValue?.Id ?? 0) > 0)
            Value = InitialValue.Id;
    }

    private async Task Load()
    {
        var query = new GetItemTypeLevels.Query(ItemType.Id);

        _itemTypeLevels = (await _queryRouter.Send(query).ConfigureAwait(false)).ItemTypeLevels;
    }

    private async Task OnInputChange(ChangeEventArgs args)
    {
        Value = Convert.ToInt32(args.Value);
        await ValueChanged.InvokeAsync(Value);
    }
}

