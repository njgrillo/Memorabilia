@page "/Autographs/Edit/{memorabiliaId:int}"
@page "/Autographs/Edit/{memorabiliaId:int}/{autographId:int}"

@using Memorabilia.Application.Features.Admin.Person
@using Memorabilia.Application.Features.Autograph
@using Memorabilia.Application.Features.Memorabilia
@using Memorabilia.Web.Controls.AcquisitionType
@using Memorabilia.Web.Controls.Color
@using Memorabilia.Web.Controls.Condition
@using Memorabilia.Web.Controls.Person
@using Memorabilia.Web.Controls.PurchaseType
@using Memorabilia.Web.Controls.WritingInstrument

@inject CommandRouter _commandRouter
@inject NavigationManager _navigation
@inject QueryRouter _queryRouter
@inject IToastService _toastService

<_Page OnLoad="OnLoad">
    <Content>
        <div class="row">
            <div class="col-md-12" style="text-align: center">
                <h1>@_viewModel.PageTitle</h1>
            </div>
        </div>
        <br />
        <div style="border: 1px solid black; margin-top: 2%; margin-bottom: 2%; margin-left: 2%; margin-right: 2%;">
            <EditForm Model="_viewModel" OnValidSubmit="HandleValidSubmit">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <div style="margin-top: 2%; margin-bottom: 2%; margin-left: 1%; margin-right: 1%;">
                    <div class="col-lg-12" style="text-align: center">
                        <img src="images/autographs.jpg" alt="Image" height="150" width="150" />
                    </div>            
                    <div class="row">
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label for="person">Person</label>
                                <_Tooltip Text="Import from memorabilia item">
                                    <img class="can-click" 
                                         src="images/import.jpg" 
                                         alt="Image" 
                                         height="20" 
                                         width="20" 
                                         hidden="@(!_displayPersonImport)"
                                         @onclick="OnImportPersonClick" />
                                </_Tooltip>
                                <_PersonSelector SelectedPerson="_viewModel.Person"
                                                 SelectedPersonChanged="SelectedPersonChanged" />          
                            </div>
                        </div>                                       
                    </div>
                    <div class="row">
                        <div class="col-lg-3">
                            <div class="form-group">                              
                                <InputCheckbox id="fullName" @bind-Value="@_viewModel.FullName" />  
                                <label for="fullName">Is Full Name</label>
                            </div> 
                        </div> 
                    </div>
                    <div class="row">
                        <div class="col-lg-3">
                            <div class="form-group">
                                <input type="checkbox" 
                                       checked="@_viewModel.IsPersonalized" 
                                       @onchange="eventArgs => { PersonalizationCheckboxClicked(eventArgs.Value); }" />
                                <label for="personalization">Has Personalization</label>
                                <div class="form-group" hidden="@(!_displayPersonalization)">
                                    <div class="form-group">
                                        <label for="text">Personalization Text</label>
                                        <_Tooltip Text="Example: To Nick">
                                            <img src="images/info.png" alt="Image" height="20" width="20" />
                                        </_Tooltip>
                                        <InputText id="text" class="form-control" @bind-Value="_viewModel.PersonalizationText" />
                                    </div>
                                </div>                    
                            </div> 
                        </div> 
                    </div>
                    <div class="row">
                        <div class="col-lg-3">
                            <div class="form-group">
                                <label for="writingInstrument">Writing Instrument</label>
                                <_WritingInstrumentDropDown @bind-Value="@_viewModel.WritingInstrumentId" 
                                                            @bind-Value:event="ValueChanged" /> 
                            </div>
                        </div>                     
                        <div class="col-lg-3">
                            <div class="form-group">
                                <label for="color">Color</label>
                                <_ColorDropDown @bind-Value="@_viewModel.ColorId" 
                                                @bind-Value:event="ValueChanged"
                                                UseAutographColors="true" /> 
                            </div>  
                        </div>   
                        @if (_viewModel.DisplayAcquisitionDetails)
                        {
                            <div class="col-lg-3">
                                <div class="form-group">
                                    <input type="checkbox" 
                                           checked="@_viewModel.IsEstimatedValueFromMemorabilia" 
                                           @onchange="eventArgs => { EstimatedValueCheckboxClicked(eventArgs.Value); }" />
                                    <label for="estimatedValue">Estimated Value same as Memorabilia</label>                                               
                                </div> 
                            </div>
                            <div class="col-lg-3">
                                <div class="form-group">
                                    <input type="checkbox" 
                                           checked="@_viewModel.IsAcquisitionFromMemorabilia"  
                                           @onchange="eventArgs => { AcquisitionDetailsCheckboxClicked(eventArgs.Value); }" />
                                    <label for="person">Acquisition Details same as Memorabilia</label>                                               
                                </div> 
                            </div>
                        }                    
                    </div>
                    <div class="row">
                        <div class="col-lg-3">
                            <div class="form-group">
                                <label for="condition">Condition</label>
                                <_ConditionDropDown @bind-Value="@_viewModel.ConditionId" 
                                                    @bind-Value:event="ValueChanged" /> 
                            </div>
                        </div>
                        <div class="col-lg-3">
                            <div class="form-group">
                                <label for="grade">Grade</label>
                                <InputNumber id="grade" class="form-control" @bind-Value="_viewModel.Grade" />
                            </div>
                        </div>  
                        @if (_viewModel.DisplayAcquisitionDetails)
                        {
                            <div class="col-lg-3" hidden="@(!_displayEstimatedValue)">
                                <div class="form-group">
                                    <label for="estimatedValue">Estimated Value ($)</label>
                                    <InputNumber id="estimatedValue" class="form-control" @bind-Value="_viewModel.EstimatedValue" />
                                </div>
                            </div>
                            <div class="col-lg-3" hidden="@(!_displayAcquisitionDetails)">
                                <div class="form-group">
                                    <label for="acquisitionType">Acquisition Type</label>
                                    <_Tooltip Text="Import from memorabilia item">
                                        <img class="can-click" src="images/import.jpg" alt="Image" height="20" width="20" @onclick="OnImportAcquisitionClick" />
                                    </_Tooltip>
                                    <_AcquisitionTypeDropDown @bind-Value="@_viewModel.AcquisitionTypeId" 
                                                              @bind-Value:event="ValueChanged"
                                                              IsAutograph="true" /> 
                                </div>
                            </div> 
                        }
                    </div>
                    <div class="row">
                        <div class="col-lg-3" />
                        <div class="col-lg-3" />
                        <div class="col-lg-3" />
                        @if (_viewModel.DisplayAcquisitionDetails && _displayAcquisitionDetails)
                        {
                            <div class="col-lg-3">
                                <div class="form-group">
                                    <label for="acquiredDate">Acquired Date</label>
                                    <InputDate id="acquiredDate" class="form-control" @bind-Value="_viewModel.AcquiredDate" />
                                </div>
                            </div> 
                        }
                    </div>
                    <div class="row">
                        <div class="col-lg-3" />  
                        <div class="col-lg-3" />
                        <div class="col-lg-3" />
                        @if (_viewModel.DisplayAcquisitionDetails && _displayAcquisitionDetails)
                        {
                            <div class="col-lg-3">
                                <div class="form-group" hidden="@(!_viewModel.CanHaveCost)">
                                    <label for="cost">Cost ($)</label>
                                    <InputNumber id="cost" class="form-control" @bind-Value="_viewModel.Cost" />
                                </div>
                            </div> 
                        }
                    </div> 
                    <div class="row">
                        <div class="col-lg-3" />
                        <div class="col-lg-3" />                                   
                        <div class="col-lg-3" />   
                        @if (_viewModel.DisplayAcquisitionDetails && _displayAcquisitionDetails)
                        {
                           <div class="col-lg-3">
                               <div class="form-group" hidden="@(!_viewModel.CanHavePlaceOfPurchase)">
                                   <label for="purchaseType">Place of Purchase</label>
                                   <_PurchaseTypeDropDown @bind-Value="@_viewModel.PurchaseTypeId" 
                                                          @bind-Value:event="ValueChanged" /> 
                               </div>
                           </div>  
                        }
                    </div> 
                    <div class="row">
                        <div class="col-lg-3" />
                        <div class="col-lg-3" />                                   
                        <div class="col-lg-3" />   
                        @if (_viewModel.DisplayAcquisitionDetails && _viewModel.DisplayThroughTheMailDetails)
                        {
                           <div class="col-lg-3">
                               <div class="form-group">
                                   <label for="sentDate">Sent</label>
                                   <InputDate id="sentDate" class="form-control" @bind-Value="_viewModel.SentDate" />
                               </div>
                           </div>  
                        }
                    </div> 
                    <div class="row">
                        <div class="col-lg-3" />
                        <div class="col-lg-3" />                                   
                        <div class="col-lg-3" />   
                        @if (_viewModel.DisplayAcquisitionDetails && _viewModel.DisplayThroughTheMailDetails)
                        {
                           <div class="col-lg-3">
                               <div class="form-group">
                                   <label for="receivedDate">Received</label>
                                   <InputDate id="receivedDate" class="form-control" @bind-Value="_viewModel.ReceivedDate" />
                               </div>
                           </div> 
                        }
                    </div>                               
                    <div class="text-left">
                        <button type="submit" class="btn btn-primary" @onclick="@(()=> _continue = true)">Save & Continue</button>
                        <button type="submit" class="btn btn-primary">Save & Exit</button>
                        <button type="button" class="btn btn-secondary" @onclick="@(_ => _navigation.NavigateTo("Memorabilia"))">Cancel</button>
                    </div>
                </div>            
            </EditForm>        
        </div>
    </Content>
</_Page>

@code {
    [Parameter]
    public int AutographId { get; set; }

    [Parameter]
    public int MemorabiliaId { get; set; }

    private bool _continue;
    private bool _displayAcquisitionDetails = true;
    private bool _displayEstimatedValue = true;
    private bool _displayPersonalization;
    private bool _displayPersonImport;
    private SaveAutographViewModel _viewModel = new SaveAutographViewModel();

    protected async Task HandleValidSubmit()
    {
        var command = new SaveAutograph.Command(_viewModel);

        await _commandRouter.Send(command).ConfigureAwait(false);

        _navigation.NavigateTo(_continue ? $"Autographs/Inscriptions/Edit/{command.Id}" : "Memorabilia");
        _toastService.ShowSuccess("Autograph was saved successfully!", _viewModel.PageTitle);
    }

    protected async Task OnLoad()
    { 
        var viewModel = await _queryRouter.Send(new GetMemorabiliaItem.Query(MemorabiliaId)).ConfigureAwait(false);

        _displayPersonImport = viewModel.People.Any() && viewModel.People.Count() == 1;

        if (viewModel.Autographs.Any())
        {
            if (AutographId == 0)
            {
                _viewModel = new SaveAutographViewModel(viewModel);
                SetDefaults();
                return;
            }

            GetViewModel(viewModel);
        }
        else
        {
            _viewModel = new SaveAutographViewModel(viewModel);
            SetDefaults();
        }
    }

    private void AcquisitionDetailsCheckboxClicked(object isChecked)
    {
        _displayAcquisitionDetails = !(bool)isChecked;

        if (!_displayAcquisitionDetails)
        {
            _viewModel.AcquisitionTypeId = 0;
            _viewModel.AcquiredDate = null;
            _viewModel.Cost = null;
            _viewModel.PurchaseTypeId = 0;
        }        

        StateHasChanged();
    }

    private void EstimatedValueCheckboxClicked(object isChecked)
    {
        _displayEstimatedValue = !(bool)isChecked;

        if (!_displayEstimatedValue)
            _viewModel.EstimatedValue = null;       

        StateHasChanged();
    }

    private void GetViewModel(MemorabiliaItemViewModel viewModel)
    {
        var autograph = AutographId == -1 
            ? viewModel.Autographs.FirstOrDefault()
            : viewModel.Autographs.SingleOrDefault(autograph => autograph.Id == AutographId);

        if (autograph == null)
        {
            _viewModel = new SaveAutographViewModel(viewModel);
            SetDefaults();
            return;
        }

        _viewModel = new SaveAutographViewModel(autograph);

        _displayAcquisitionDetails = _viewModel.AcquisitionTypeId > 0;
        _displayEstimatedValue = _viewModel.EstimatedValue.HasValue;
        _displayPersonalization = !_viewModel.PersonalizationText.IsNullOrEmpty();
        _displayPersonImport = _viewModel.MemorabiliaPerson?.Id > 0;
    }

    private void OnImportAcquisitionClick()
    {
        _viewModel.AcquisitionTypeId = _viewModel.MemorabiliaAcquisitionTypeId;
        _viewModel.AcquiredDate = _viewModel.MemorabiliaAcquiredDate;
        _viewModel.Cost = _viewModel.MemorabiliaCost;
        _viewModel.PurchaseTypeId = _viewModel.MemorabiliaPurchaseTypeId ?? 0;
    }

    private void OnImportPersonClick()
    {
        _viewModel.Person = new SavePersonViewModel(_viewModel.MemorabiliaPerson);
    }

    private void PersonalizationCheckboxClicked(object isChecked)
    {
        _viewModel.PersonalizationText = (bool)isChecked ? $"To {_viewModel.UserFirstName}" : null;

        StateHasChanged();
    } 

    private void SelectedPersonChanged(SavePersonViewModel person)
    {
        _viewModel.Person = person;
    }

    private void SetDefaults()
    {
        _viewModel.ConditionId = Domain.Constants.Condition.Pristine.Id;
    }
}