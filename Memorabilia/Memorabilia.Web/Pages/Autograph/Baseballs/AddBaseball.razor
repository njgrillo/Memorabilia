@page "/Autographs/Baseball/Add/{autographId:int}"

@using Memorabilia.Application.Features.Autograph.Baseball
@using Memorabilia.Domain.Constants
@using Memorabilia.Web.Controls.ItemTypeSpot

@inject CommandRouter _commandRouter
@inject ProtectedLocalStorage _localStorage
@inject NavigationManager _navigation
@inject IToastService _toastService

@if (_viewModel == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row">
        <div class="col-md-12" style="text-align: center">
            <h1>@_viewModel.PageTitle</h1>
        </div>
    </div>
    <br />
    <div style="border: 1px solid black; margin-top: 2%; margin-bottom: 2%; margin-left: 2%; margin-right: 2%;">
        <div class="row" style="margin-top: 2%; margin-bottom: 2%; margin-left: 1%; margin-right: 1%;">
            <div class="col-lg-12" style="text-align: center">
                <img src="@_viewModel.ImagePath" alt="Image" height="150" width="150" />
            </div>            
            <EditForm Model="_viewModel" OnValidSubmit="HandleValidSubmit">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <div class="row">
                    <div class="col-lg-12">
                        <div class="form-group">
                            <label for="spot">Spot</label>
                            <_ItemTypeSpotDropDown @bind-Value="@_viewModel.SpotId"
                                                   @bind-Value:event="ValueChanged" 
                                                   ItemType="@ItemType.Baseball" /> 
                        </div> 
                    </div>
                </div>                                   
                <div class="text-right">
                    <button type="submit" class="btn btn-primary" @onclick="@(()=> _continue = true)">Save & Continue</button>
                    <button type="submit" class="btn btn-primary">Save & Exit</button>
                    <button type="button" class="btn btn-secondary" @onclick="@(_ => _navigation.NavigateTo("Memorabilia"))">Cancel</button>
                </div>
            </EditForm>
        </div>
    </div>
}

@code {
    [Parameter]
    public int AutographId { get; set; }

    private bool _continue;
    private SaveBaseballViewModel _viewModel = new SaveBaseballViewModel();   

    protected async Task HandleValidSubmit()
    {
        var userId = await _localStorage.GetAsync<int>("UserId").ConfigureAwait(false);

        if (userId.Value == 0)
            _navigation.NavigateTo("Login");

        _viewModel.AutographId = AutographId;

        var command = new SaveBaseball.Command(_viewModel);

        await _commandRouter.Send(command).ConfigureAwait(false);

        var url = _continue ? $"Autographs/Image/Add/{command.AutographId}" : "Memorabilia";

        _navigation.NavigateTo(url);

        _toastService.ShowSuccess("Baseball Details were added successfully!", _viewModel.PageTitle);
    }

    protected override async Task OnInitializedAsync()
    {
        var userId = await _localStorage.GetAsync<int>("UserId").ConfigureAwait(false);

        if (userId.Value == 0)
            _navigation.NavigateTo("Login");
    } 
}
