@page "/Autographs/Inscriptions/Edit/{autographId:int}"

@using Memorabilia.Application.Features.Autograph.Inscription
@using Memorabilia.Web.Controls
@using Memorabilia.Web.Controls.InscriptionType

@inject CommandRouter _commandRouter
@inject ProtectedLocalStorage _localStorage
@inject NavigationManager _navigation
@inject IToastService _toastService

@if (_viewModel == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row">
        <div class="col-md-12" style="text-align: center">
            <h1>@_inscriptionsViewModel.PageTitle</h1>
        </div>
    </div>
    <br />
    <div style="border: 1px solid black; margin-top: 2%; margin-bottom: 2%; margin-left: 2%; margin-right: 2%;">
        <div class="row" style="margin-top: 2%; margin-bottom: 2%; margin-left: 1%; margin-right: 1%;">
            <div class="col-lg-12" style="text-align: center">
                <img src="@_inscriptionsViewModel.ImagePath" alt="Image" height="150" width="150" />
            </div>            
            <EditForm Model="_viewModel" OnValidSubmit="HandleValidSubmit">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <div class="row">
                    <div class="col-lg-12">
                        <div class="form-group">
                            <label for="inscriptionType">Type</label>
                            <_InscriptionTypeDropDown @bind-Value="@_viewModel.InscriptionTypeId"
                                                      @bind-Value:event="ValueChanged" /> 
                        </div> 
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-12">
                        <div class="form-group">
                            <label for="inscriptionText">Inscription</label>
                            <InputText id="inscriptionText" class="form-control" @bind-Value="_viewModel.InscriptionText" />
                        </div> 
                    </div>
                </div>     
                <div class="text-right">
                    <button type="button" class="btn btn-secondary" @onclick="AddInscription">Add</button>
                </div>
                <br />
                <table class="table" style="border: 1px solid black;">
                    <thead>
                        <tr>
                            <th>Inscription Type</th>
                            <th>Inscription Text</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var inscription in _inscriptionsViewModel.Inscriptions)
                        {
                            <tr>
                                <td>@inscription.InscriptionTypeName</td>
                                <td>@inscription.InscriptionText</td>
                                <td>
                                    <_Tooltip Text="Delete">
                                        <img class="can-click" 
                                             src="images/trash.png" 
                                             height="25" 
                                             width="25" 
                                             @onclick="@(_ => Remove(inscription.InscriptionTypeId, inscription.InscriptionText))" />
                                    </_Tooltip>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                <div class="text-right">
                    <button type="submit" class="btn btn-primary" @onclick="@(()=> _continue = true)">Save & Continue</button>
                    <button type="submit" class="btn btn-primary">Save & Exit</button>
                    <button type="button" class="btn btn-secondary" @onclick="@(_ => _navigation.NavigateTo("Memorabilia"))">Cancel</button>
                </div>
            </EditForm>
        </div>
    </div>
}

@code {
    [Parameter]
    public int AutographId { get; set; }

    private bool _continue;
    private SaveInscriptionsViewModel _inscriptionsViewModel = new SaveInscriptionsViewModel();     
    private SaveInscriptionViewModel _viewModel = new SaveInscriptionViewModel();

    protected async Task HandleValidSubmit()
    {
        var userId = await _localStorage.GetAsync<int>("UserId").ConfigureAwait(false);

        if (userId.Value == 0)
            _navigation.NavigateTo("Login");

        _inscriptionsViewModel.AutographId = AutographId;

        var command = new SaveInscriptions.Command(_inscriptionsViewModel);

        await _commandRouter.Send(command).ConfigureAwait(false);

        var url = _continue ? $"Autographs/Authentications/Edit/{command.AutographId}" : "Memorabilia";

        _navigation.NavigateTo(url);

        _toastService.ShowSuccess("Inscriptions were saved successfully!", _inscriptionsViewModel.PageTitle);
    }

    protected override async Task OnInitializedAsync()
    {
        var userId = await _localStorage.GetAsync<int>("UserId").ConfigureAwait(false);

        if (userId.Value == 0)
            _navigation.NavigateTo("Login");

        //var query = GetI
    } 

    private void AddInscription()
    {        
        _inscriptionsViewModel.Inscriptions.Add(_viewModel);   
        _viewModel = new SaveInscriptionViewModel();
    }

    private void Remove(int inscriptionTypeId, string inscriptionText)
    {
        var inscription = _inscriptionsViewModel.Inscriptions.Single(inscription => inscription.InscriptionTypeId == inscriptionTypeId &&
                                                                                    inscription.InscriptionText == inscriptionText);

        _inscriptionsViewModel.Inscriptions.Remove(inscription);                                                                               
    }    
}
