@page "/Teams"

@using Memorabilia.Application.Features.Admin
@using Memorabilia.Application.Features.Admin.Team

@inject CommandRouter _commandRouter
@inject ProtectedLocalStorage _localStorage
@inject NavigationManager _navigation
@inject QueryRouter _queryRouter
@inject IToastService _toastService

@if (_viewModel == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <PopConfirm @ref="_deleteDialog"
                Title="Delete Team"
                ConfirmedChanged="Delete" />
    <div class="row">
        <div class="col-md-12" style="text-align: center">
            <h1>@_viewModel.PageTitle</h1>
        </div>
    </div>
    <br />
    <_Table Items="_viewModel.Teams" 
            ItemsPerPage="10"                     
            TItem="TeamViewModel">
        <HeaderTemplate>
            <th scope="col">Franchise</th>
            <th scope="col">Name</th>
            <th scope="col">Location</th>
            <th scope="col">Nickname</th>
            <th scope="col">Abbreviation</th>
            <th scope="col">Begin Year</th>
            <th scope="col">End Year</th>
            <th scope="col"></th>
            <th scope="col"></th>
        </HeaderTemplate>
        <RowTemplate>
            <td>@context.FranchiseName</td>
            <td>@context.Name</td>
            <td>@context.Location</td>
            <td>@context.Nickname</td>
            <td>@context.Abbreviation</td>
            <td>@context.BeginYear</td>
            <td>@context.EndYear</td>
            <td>
                <_Tooltip Text="Edit">
                    <img class="can-click" 
                            src="images/pencil.png" 
                            height="25" 
                            width="25" 
                            @onclick="@(_ => _navigation.NavigateTo($"{_viewModel.RoutePrefix}/Edit/{context.Id}"))" />
                </_Tooltip>                        
            </td>
            <td>
                <_Tooltip Text="Delete">
                    <img class="can-click" 
                            src="images/trash.png" 
                            height="25" 
                            width="25" 
                            @onclick="@(_ => ShowConfirm(context.Id))" />
                </_Tooltip>
            </td>
        </RowTemplate>
    </_Table>
    <div class="row">
        <div class="col-md-12" style="text-align: center">
            <div class="col-md-12" style="text-align: center">
                <a href="Teams/Add">Add @_viewModel.ItemTitle</a>
            </div>
        </div>
    </div>
    <br />
}

@code {
    private PopConfirm _deleteDialog;
    private int _deletedItemId;
    private TeamsViewModel _viewModel;

    protected async Task Delete(bool confirm)
    {
        if (!confirm)
        {
            _deletedItemId = 0;
            return;
        }

        var deletedItem = _viewModel.Teams.Single(team => team.Id == _deletedItemId);
        var viewModel = new SaveTeamViewModel(deletedItem);
        viewModel.IsDeleted = true;

        var command = new SaveTeam.Command(viewModel);

        await _commandRouter.Send(command).ConfigureAwait(false);
        
        _viewModel.Teams.Remove(deletedItem);

        _toastService.ShowSuccess($"{_viewModel.ItemTitle} was deleted successfully!", _viewModel.PageTitle);
    }

    protected override async Task OnInitializedAsync()
    {
        var userId = await _localStorage.GetAsync<int>("UserId");

        if (userId.Value == 0)
            _navigation.NavigateTo("Login");

        var query = new GetTeams.Query();

        _viewModel = await _queryRouter.Send(query).ConfigureAwait(false);
    }

    protected void ShowConfirm(int id)
    {
        _deletedItemId = id;
        _deleteDialog.ShowPop();
    }
}
