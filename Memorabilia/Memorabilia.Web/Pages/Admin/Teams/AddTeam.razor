@page "/Teams/Add"

@using Memorabilia.Application.Features.Admin
@using Memorabilia.Application.Features.Admin.Franchise
@using Memorabilia.Application.Features.Admin.Sport
@using Memorabilia.Application.Features.Admin.Team

@inject CommandRouter _commandRouter
@inject ProtectedLocalStorage _localStorage
@inject NavigationManager _navigation
@inject QueryRouter _queryRouter
@inject IToastService _toastService

@if (_viewModel == null || _franchises == null || _filteredFranchises == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row">
        <div class="col-md-12" style="text-align: center">
            <h1>@_viewModel.PageTitle</h1>
        </div>
    </div>
    <br />
    <div style="border: 1px solid black; margin-top: 2%; margin-bottom: 2%; margin-left: 2%; margin-right: 2%;">
        <div class="row" style="margin-top: 2%; margin-bottom: 2%; margin-left: 1%; margin-right: 1%;">
            <div class="col-lg-12" style="text-align: center">
                <img src="images/teams.jpg" alt="Image" height="150" width="150" />
            </div>
            <EditForm Model="_viewModel" OnValidSubmit="HandleValidSubmit">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <div class="form-group">
                    <label for="sports">Sports</label>
                    <select value="@_sportId" @onchange="OnChangeSport">
                        @foreach (var sport in Memorabilia.Domain.Constants.Sport.All)
                        {
                            <option value="@sport.Id">@sport.Name</option>
                        }
                    </select>                            
                </div>
                <div class="form-group">
                    <label for="franchise">Franchise</label>
                    <InputSelect id="franchise" @bind-Value="_viewModel.FranchiseId" class="form-control">
                        @foreach (var franchise in _filteredFranchises)
                        {
                            <option value="@franchise.Id">@franchise.FullName</option>
                        }
                    </InputSelect>
                </div>
                <div class="form-group">
                    <label for="name">Name</label>
                    <InputText id="name" @bind-Value="_viewModel.Name" class="form-control" />
                </div>
                <div class="form-group">
                    <label for="location">Location</label>
                    <InputText id="location" @bind-Value="_viewModel.Location" class="form-control" />
                </div>
                <div class="form-group">
                    <label for="nickname">Nickname</label>
                    <InputText id="nickname" @bind-Value="_viewModel.Nickname" class="form-control" />
                </div>
                <div class="form-group">
                    <label for="abbreviation">Abbreviation</label>
                    <InputText id="abbreviation" @bind-Value="_viewModel.Abbreviation" class="form-control" />
                </div>
                <div class="form-group">
                    <label for="beginYear">Begin Year</label>
                    <InputNumber id="beginYear" @bind-Value="_viewModel.BeginYear" class="form-control" />
                </div>
                <div class="form-group">
                    <label for="endYear">End Year</label>
                    <InputNumber id="endYear" @bind-Value="_viewModel.EndYear" class="form-control" />
                </div>
                <div class="text-right">
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            </EditForm>
        </div>
        <div class="row">
            <div class="col-md-12" style="text-align: center">
                <a href="Teams">Back</a>
            </div>
        </div>
        <br />
    </div>
}

@code {
    private IEnumerable<FranchiseViewModel> _filteredFranchises;
    private IEnumerable<FranchiseViewModel> _franchises;
    private int _sportId { get; set; }
    private SportsViewModel _sports;
    private SaveTeamViewModel _viewModel = new SaveTeamViewModel();

    protected async Task HandleValidSubmit()
    {
        var command = new SaveTeam.Command(_viewModel);

        await _commandRouter.Send(command).ConfigureAwait(false);

        _navigation.NavigateTo("Teams");

        _toastService.ShowSuccess("Team was added successfully!", _viewModel.PageTitle);
    }

    protected override async Task OnInitializedAsync()
    {
        var userId = await _localStorage.GetAsync<int>("UserId");

        if (userId.Value == 0)
            _navigation.NavigateTo("Login");

        var query = new GetFranchises.Query();

        _franchises = (await _queryRouter.Send(query).ConfigureAwait(false)).Franchises;
        _filteredFranchises = _franchises;
    }

    private void OnChangeSport(ChangeEventArgs args)
    {
        var sportId = int.Parse(args.Value.ToString());

        _filteredFranchises = _franchises.Where(franchise => franchise.SportId == sportId).OrderBy(franchise => franchise.FullName);
    }
}