@page "/People/Occupation/Edit/{personId:int}"

@using Memorabilia.Application.Features.Admin
@using Memorabilia.Application.Features.Admin.Person
@using Memorabilia.Web.Controls.Person

@inject CommandRouter _commandRouter
@inject ProtectedLocalStorage _localStorage
@inject NavigationManager _navigation
@inject QueryRouter _queryRouter
@inject IToastService _toastService

@if (!_pageLoaded)
{
    <_PageLoader />
}
else
{
    <div class="row">
        <div class="col-md-12" style="text-align: center">
            <h1>Edit Occupations</h1>
        </div>
    </div>
    <br />
    <div style="border: 1px solid black; margin-top: 2%; margin-bottom: 2%; margin-left: 2%; margin-right: 2%;">
        <div class="row" style="margin-top: 2%; margin-bottom: 2%; margin-left: 1%; margin-right: 1%;">
            <div class="col-lg-12" style="text-align: center">
                <img src="images/occupations.jpg" alt="Image" height="150" width="150" />
            </div>
            <EditForm Model="_viewModel" OnValidSubmit="HandleValidSubmit">
                <DataAnnotationsValidator />
                <ValidationSummary /> 
                <div class="row">
                    <div class="col-lg-12">
                        <div class="form-group">
                            <_PersonOccupationSelector Occupations="_viewModel" />
                        </div>
                    </div>
                </div>
                <div class="text-right">
                    <button type="submit" class="btn btn-primary" @onclick="@(()=> _continue = true)">Save & Continue</button>
                    <button type="submit" class="btn btn-primary">Save & Exit</button>
                    <button type="button" class="btn btn-secondary" @onclick="@(_ => _navigation.NavigateTo("People"))">Cancel</button>
                </div>
            </EditForm>
        </div>
        <div class="row">
            <div class="col-md-12" style="text-align: center">
                <a href="People">Back</a>
            </div>
        </div>
        <br />
    </div>
}

@code {
    [Parameter]
    public int PersonId { get; set; }

    private bool _continue;
    private bool _pageLoaded;
    private List<SavePersonOccupationViewModel> _viewModel = new();

    protected async Task HandleValidSubmit()
    {
        var command = new SavePersonOccupation.Command(PersonId, _viewModel);

        await _commandRouter.Send(command).ConfigureAwait(false);

        var url = _continue ? $"People/Team/Edit/{PersonId}" : "People";

        _navigation.NavigateTo(url);

        _toastService.ShowSuccess("Occupations were saved successfully!", "Occupation");
    }

    protected override async Task OnInitializedAsync()
    {
        var query = new GetPersonOccupations.Query(PersonId);

        _viewModel = (await _queryRouter.Send(query)
                                        .ConfigureAwait(false)).Select(personOccupation => new SavePersonOccupationViewModel(personOccupation))
                                                               .ToList();

        _pageLoaded = true;
    }
}