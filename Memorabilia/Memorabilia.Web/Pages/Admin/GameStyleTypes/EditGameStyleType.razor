@page "/GameStyleTypes/Edit/{id:int}"

@using Memorabilia.Application.Features.Admin
@using Memorabilia.Application.Features.Admin.GameStyleType
@using Memorabilia.Web.Controls.GameStyleType

@inject CommandRouter _commandRouter
@inject ProtectedLocalStorage _localStorage
@inject NavigationManager _navigation
@inject QueryRouter _queryRouter
@inject IToastService _toastService

@if (!_pageLoaded)
{
    <_PageLoader />
}
else
{
    <_GameStyleTypeEditor EditModeType="@_editModeType" 
                          Item="@_viewModel"                  
                          OnSave="Save" />
}

@code {
    [Parameter]
    public int Id { get; set; }

    private EditModeType _editModeType;
    private bool _pageLoaded;
    private SaveDomainViewModel _viewModel = new SaveDomainViewModel();   

    protected override async Task OnInitializedAsync()
    {
        var query = new GetGameStyleType.Query(Id);

        _viewModel = new SaveDomainViewModel(await _queryRouter.Send(query).ConfigureAwait(false));
    }

     protected async Task Save()
    {
        _editModeType = Id > 0 ? EditModeType.Update : EditModeType.Add;

        if (Id == 0)
        {
            _pageLoaded = true;
            return;
        }

        var command = new SaveGameStyleType.Command(_viewModel);

        await _commandRouter.Send(command).ConfigureAwait(false);
        _pageLoaded = true;
    }
}
