@page "/Memorabilia/Baseball/Edit/{memorabiliaId:int}"

@using Memorabilia.Application.Features.Admin.Person
@using Memorabilia.Application.Features.Admin.Team
@using Memorabilia.Application.Features.Memorabilia
@using Memorabilia.Application.Features.Memorabilia.Baseball
@using Memorabilia.Domain.Constants
@using Memorabilia.Web.Controls.Baseball
@using Memorabilia.Web.Controls.Commissioner
@using Memorabilia.Web.Controls.ItemTypeBrand
@using Memorabilia.Web.Controls.ItemTypeGameStyle
@using Memorabilia.Web.Controls.ItemTypeLevel
@using Memorabilia.Web.Controls.ItemTypeSize
@using Memorabilia.Web.Controls.Person
@using Memorabilia.Web.Controls.Team

@inject CommandRouter _commandRouter
@inject ProtectedLocalStorage _localStorage
@inject NavigationManager _navigation
@inject QueryRouter _queryRouter
@inject IToastService _toastService

@if (!_pageLoaded)
{
    <_PageLoader />
}
else
{
    <div class="row">
        <div class="col-md-12" style="text-align: center">
            <h1>@_viewModel.PageTitle</h1>
        </div>
    </div>
    <br />
    <div style="border: 1px solid black; margin-top: 2%; margin-bottom: 2%; margin-left: 2%; margin-right: 2%;">
        <EditForm Model="_viewModel" OnValidSubmit="HandleValidSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div style="margin-top: 2%; margin-bottom: 2%; margin-left: 1%; margin-right: 1%;">
                <div class="col-lg-12" style="text-align: center">
                    <img src="@_viewModel.ImagePath" alt="Image" height="150" width="150" />
                </div>    
                <br />
                <div class="row">
                    <div class="col-lg-3">
                        <div class="form-group">
                            <label for="brand">Brand</label>
                            <_ItemTypeBrandDropDown @bind-Value="@_viewModel.BrandId" 
                                                    @bind-Value:event="ValueChanged"
                                                    ItemType="_viewModel.ItemType" />
                        </div> 
                    </div>
                    <div class="col-lg-3">
                        <div class="form-group">
                            <label for="gameStyleType">Game Style Type</label>
                            <_ItemTypeGameStyleDropDown @bind-Value="@_viewModel.GameStyleTypeId"
                                                        @bind-Value:event="ValueChanged"
                                                        ItemType="_viewModel.ItemType" /> 
                        </div> 
                    </div>
                    <div class="col-lg-3">
                            <div class="form-group" hidden="@(!_viewModel.DisplayBaseballType)">
                            <label for="baseballType">Type</label>
                            <_BaseballTypeDropDown @bind-Value="@_viewModel.BaseballTypeId" 
                                                   @bind-Value:event="ValueChanged"
                                                   GameStyleType="_viewModel.GameStyleType" /> 
                        </div> 
                    </div> 
                </div>
                <div class="row">
                    <div class="col-lg-3">
                        <div class="form-group">
                            <label for="size">Size</label>
                            <_ItemTypeSizeDropDown @bind-Value="@_viewModel.SizeId"
                                                   @bind-Value:event="ValueChanged" 
                                                   ItemType="_viewModel.ItemType" /> 
                        </div> 
                    </div>
                    <div class="col-lg-3">
                        <div class="form-group" hidden="@(!_viewModel.DisplayGameDate)">
                            <label for="gameDate">Game Date</label>
                            <InputDate id="gameDate" class="form-control" @bind-Value="_viewModel.GameDate" />
                        </div>                        
                    </div>
                    @if (_viewModel.DisplayBaseballTypeYear)
                    {
                        <div class="col-lg-3">
                            <div class="form-group">
                                <label for="year">Year</label>
                                <InputNumber id="year" class="form-control" @bind-Value="_viewModel.BaseballTypeYear" />
                            </div>                        
                        </div>
                    }
                    @if (_viewModel.DisplayBaseballTypeAnniversary)
                    {
                        <div class="col-lg-3">
                            <div class="form-group">
                                <label for="anniversary">Anniversary</label>
                                <_Tooltip Text="Example: 25th">
                                    <img src="images/info.png" alt="Image" height="20" width="20" />
                                </_Tooltip>
                                <InputText id="anniversary" class="form-control" @bind-Value="_viewModel.BaseballTypeAnniversary" />
                            </div>                         
                        </div>
                    }                    
                </div>
                <div class="row">
                    <div class="col-lg-3">
                        <div class="form-group">
                            <label for="level">Level</label>
                            <_ItemTypeLevelDropDown @bind-Value="@_viewModel.LevelTypeId"
                                                    @bind-Value:event="ValueChanged" 
                                                    ItemType="_viewModel.ItemType" /> 
                        </div> 
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-3">
                            <div class="form-group">
                            <label for="commissioner">Commissioner</label>
                            <_CommissionerDropDown @bind-Value="@_viewModel.CommissionerId"
                                                   @bind-Value:event="ValueChanged" 
                                                   SportLeagueLevel="_viewModel.SportLeagueLevel" />
                        </div>
                    </div>
                </div>
                <_PersonSelector CanFilterBySport="true"
                                 CanToggle="true"
                                 ItemType="_viewModel.ItemType"
                                 SelectedPerson="_viewModel.Person"
                                 SelectedPersonChanged="SelectedPersonChanged"
                                 Sport="_viewModel.Sport" />                 
                <_TeamSelector CanToggle="true" 
                               ItemType="_viewModel.ItemType"
                               SelectedTeam="_viewModel.Team"
                               SelectedTeamChanged="SelectedTeamChanged"
                               SportLeagueLevel="_viewModel.SportLeagueLevel" />                           
                <div class="text-left">
                    <button type="submit" class="btn btn-primary" @onclick="@(()=> _continue = true)">Save & Continue</button>
                    <button type="submit" class="btn btn-primary">Save & Exit</button>
                    <button type="button" class="btn btn-secondary" @onclick="@(_ => _navigation.NavigateTo("Memorabilia"))">Cancel</button>
                </div>
            </div>            
        </EditForm>        
        <div class="row">
            <div class="col-md-12" style="text-align: center">
                <a href="Memorabilia/Items">Back</a>
            </div>
        </div>
        <br />
    </div>
}

@code {
    [Parameter]
    public int MemorabiliaId { get; set; }

    private bool _continue;
    private bool _pageLoaded;
    private SaveBaseballViewModel _viewModel = new SaveBaseballViewModel();

    protected async Task HandleValidSubmit()
    {
        var userId = await _localStorage.GetAsync<int>("UserId").ConfigureAwait(false);

        if (userId.Value == 0)
            _navigation.NavigateTo("Login");  

        _viewModel.MemorabiliaId = MemorabiliaId;

        var command = new SaveBaseball.Command(_viewModel);

        await _commandRouter.Send(command).ConfigureAwait(false);

        var url = _continue ? $"Memorabilia/Image/Edit/{command.MemorabiliaId}" : "Memorabilia";

        _navigation.NavigateTo(url);

        _toastService.ShowSuccess("Baseball Details were saved successfully!", _viewModel.PageTitle);
    }

    protected override async Task OnInitializedAsync()
    {
        var userId = await _localStorage.GetAsync<int>("UserId").ConfigureAwait(false);

        if (userId.Value == 0)
            _navigation.NavigateTo("Login");  

        var query = new GetBaseball.Query(MemorabiliaId);
        var baseballViewModel = await _queryRouter.Send(query).ConfigureAwait(false);

        if (baseballViewModel.Brand == null)
        {
            SetDefaults();
            _pageLoaded = true;
            return;
        }    

        _viewModel = new SaveBaseballViewModel(baseballViewModel);
        _pageLoaded = true;
    }  

    private void SelectedPersonChanged(SavePersonViewModel person)
    {
        _viewModel.Person = person;
    }

    private void SelectedTeamChanged(SaveTeamViewModel team)
    {
        _viewModel.Team = team;
    }

    private void SetDefaults()
    {
        _viewModel.BaseballTypeId = BaseballType.Official.Id;
        _viewModel.BrandId = Brand.Rawlings.Id;
        _viewModel.GameStyleTypeId = GameStyleType.None.Id;
        _viewModel.LevelTypeId = LevelType.Professional.Id;
        _viewModel.SizeId = Size.Standard.Id;        
    }
}