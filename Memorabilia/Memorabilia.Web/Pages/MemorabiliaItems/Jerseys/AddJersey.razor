@page "/Memorabilia/Jersey/Add/{memorabiliaId:int}"

@using Memorabilia.Application.Features.Memorabilia
@using Memorabilia.Application.Features.Memorabilia.Jersey
@using Memorabilia.Domain.Constants
@using Memorabilia.Web.Controls.AuthenticType
@using Memorabilia.Web.Controls.ItemTypeBrand
@using Memorabilia.Web.Controls.ItemTypeLevel
@using Memorabilia.Web.Controls.ItemTypeSize
@using Memorabilia.Web.Controls.Jersey
@using Memorabilia.Web.Controls.Person
@using Memorabilia.Web.Controls.Team

@inject CommandRouter _commandRouter
@inject ProtectedLocalStorage _localStorage
@inject NavigationManager _navigation
@inject QueryRouter _queryRouter
@inject IToastService _toastService

@if (_viewModel == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row">
        <div class="col-md-12" style="text-align: center">
            <h1>@_viewModel.PageTitle</h1>
        </div>
    </div>
    <br />
    <div style="border: 1px solid black; margin-top: 2%; margin-bottom: 2%; margin-left: 2%; margin-right: 2%;">
        <div class="row" style="margin-top: 2%; margin-bottom: 2%; margin-left: 1%; margin-right: 1%;">
            <div class="col-lg-12" style="text-align: center">
                <img src="images/jerseytypes.jpg" alt="Image" height="150" width="150" />
            </div>            
            <EditForm Model="_viewModel" OnValidSubmit="HandleValidSubmit">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <div class="form-group">
                    <label for="brand">Brand</label>
                    <_ItemTypeBrandDropDown @bind-Value="@_viewModel.BrandId" 
                                            @bind-Value:event="ValueChanged"
                                            ItemType="@ItemType.Jersey" />
                </div>    
                <div class="form-group">
                    <label for="level">Level</label>
                    <_ItemTypeLevelDropDown @bind-Value="@_viewModel.LevelTypeId"
                                            @bind-Value:event="ValueChanged" 
                                            ItemType="@ItemType.Jersey" /> 
                </div> 
                <div class="form-group">
                    <label for="jerseyType">Type</label>
                    <_JerseyTypeDropDown @bind-Value="@_viewModel.JerseyTypeId"
                                         @bind-Value:event="ValueChanged" /> 
                </div> 
                <div class="form-group">
                    <label for="jerseyStyleType">Style</label>
                    <_JerseyStyleTypeDropDown @bind-Value="@_viewModel.JerseyStyleTypeId"
                                              @bind-Value:event="ValueChanged" /> 
                </div> 
                <div class="form-group">
                    <label for="JerseyQualityType">Quality</label>
                    <_JerseyQualityTypeDropDown @bind-Value="@_viewModel.JerseyQualityTypeId" 
                                                @bind-Value:event="ValueChanged" /> 
                </div>        
                <div class="form-group" hidden="@(!_viewModel.DisplayAuthenticType)">
                    <label for="JerseyAuthenticType">Authentic Type</label>
                    <_AuthenticTypeDropDown @bind-Value="@_viewModel.AuthenticTypeId" 
                                            @bind-Value:event="ValueChanged" /> 
                </div>    
                <div class="form-group" hidden="@(!_viewModel.DisplayGameDate)">
                    <label for="gameDate">Game Date</label>
                    <InputDate id="gameDate" class="form-control" @bind-Value="_viewModel.GameDate" />
                </div> 
                @*<div class="form-group" hidden="@(!_viewModel.DisplayJerseyTypeAnniversary)">
                    <label for="anniversary">Anniversary</label>
                    <InputText id="anniversary" class="form-control" @bind-Value="_viewModel.JerseyTypeAnniversary" />
                </div>  *@
                <div class="form-group">
                    <label for="size">Size</label>
                    <_ItemTypeSizeDropDown @bind-Value="@_viewModel.SizeId"
                                           @bind-Value:event="ValueChanged" 
                                           ItemType="@ItemType.Jersey" /> 
                </div> 
                <div class="form-group">
                    <input type="checkbox" @onchange="eventArgs => { PersonCheckboxClicked(eventArgs.Value); }" />
                    <label for="person">Associate Jersey with People</label>
                    @*<div class="form-group" hidden="@(!_displayPeople)">
                        <_PersonSelector @bind-Value="@_viewModel.PersonId"
                                         @bind-Value:event="ValueChanged" /> 
                    </div> *@                   
                </div>  
                <div class="form-group">
                    <input type="checkbox" @onchange="eventArgs => { TeamsCheckboxClicked(eventArgs.Value); }" />
                    <label for="teams">Associate Jersey with Team(s)</label>
                    @*<div class="form-group" hidden="@(!_displayTeams)">
                        <_TeamDropDown @bind-Value="@_viewModel.TeamId"
                                       @bind-Value:event="ValueChanged"                                        
                                       Sport="@Sport.Jersey" /> 
                    </div> *@                   
                </div>                             
                <div class="text-right">
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            </EditForm>
        </div>
        <div class="row">
            <div class="col-md-12" style="text-align: center">
                <a href="Memorabilia/Add">Back</a>
            </div>
        </div>
        <br />
    </div>
}

@code {
    [Parameter]
    public int MemorabiliaId { get; set; }  

    private bool _displayPeople;
    private bool _displayTeams;
    private SaveJerseyViewModel _viewModel = new SaveJerseyViewModel();

    protected async Task HandleValidSubmit()
    {
        var userId = await _localStorage.GetAsync<int>("UserId").ConfigureAwait(false);

        if (userId.Value == 0)
            _navigation.NavigateTo("Login");

        _viewModel.MemorabiliaId = MemorabiliaId;

        var command = new SaveJersey.Command(_viewModel);

        await _commandRouter.Send(command).ConfigureAwait(false);

        _navigation.NavigateTo($"Memorabilia/Image/Add/{command.MemorabiliaId}");

        _toastService.ShowSuccess("Jersey Details were added successfully!", _viewModel.PageTitle);
    }

    protected override async Task OnInitializedAsync()
    {
        var userId = await _localStorage.GetAsync<int>("UserId").ConfigureAwait(false);

        if (userId.Value == 0)
            _navigation.NavigateTo("Login");
    }    

    private void PersonCheckboxClicked(object isChecked)
    {
        _displayPeople = (bool)isChecked;

        //if (!_displayPeople)
        //    _viewModel.PersonId = 0;

        StateHasChanged();
    } 

    private void TeamsCheckboxClicked(object isChecked)
    {
        _displayTeams = (bool)isChecked;

        //if (!_displayTeams)
        //    _viewModel.TeamId = 0;

        StateHasChanged();
    } 
}