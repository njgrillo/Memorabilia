@page "/Memorabilia/Helmet/Edit/{memorabiliaId:int}"

@using Memorabilia.Application.Features.Memorabilia.Helmet
@using Memorabilia.Web.Controls.DropDowns
@using Memorabilia.Web.Controls.MemorabiliaItem
@using Memorabilia.Web.Controls.Person
@using Memorabilia.Web.Controls.Team

<EditPage ContinueNavigationPath="@_viewModel.ContinueNavigationPath"
          EditMode="_viewModel.EditModeType"
          ExitNavigationPath="@_viewModel.ExitNavigationPath"
          ImagePath="@_viewModel.ImagePath"
          ItemName="@_viewModel.ItemType.Name"
          Model="_viewModel"
          OnLoad="OnLoad"
          OnSave="OnSave"
          PageFooterButtonText="@_viewModel.ExitButtonText"
          PageFooterNavigationPath="@_viewModel.ExitNavigationPath"
          PageTitle="@_viewModel.PageTitle"
          TItem="SaveHelmetViewModel"
          UseMultipleButtons="true">
    <TimelineContent>
        <MemorabiliaItemTimeline EditMode="_viewModel.EditModeType"
                                 ItemTypeName="@_viewModel.ItemType.Name"
                                 MemorabiliaId="_viewModel.MemorabiliaId"
                                 MemorabiliaItemStep="_viewModel.MemorabiliaItemStep" />
    </TimelineContent>
    <Content>
        <DivRowCol3>
            <Content>
                <ItemTypeLevelDropDown @bind-Value="@_viewModel.LevelTypeId"
                                       @bind-Value:event="ValueChanged" 
                                       ItemType="_viewModel.ItemType"
                                       SelectedValue="_viewModel.LevelTypeId" /> 
            </Content>
            <ContentColumn2>
                <ItemTypeBrandDropDown @bind-Value="@_viewModel.BrandId" 
                                       @bind-Value:event="ValueChanged"
                                       ItemType="_viewModel.ItemType"
                                       SelectedValue="_viewModel.BrandId" />
            </ContentColumn2>
        </DivRowCol3>
        <DivRowCol3>
            <Content>
                <ItemTypeSizeDropDown @bind-Value="@_viewModel.SizeId"
                                      @bind-Value:event="ValueChanged" 
                                      ItemType="_viewModel.ItemType"
                                      SelectedValue="@_viewModel.SizeId" /> 
            </Content>
            <ContentColumn2>
                <MudSelect @bind-Value="@_viewModel.GameStyleTypeId"
                           @bind-Value:event="ValueChanged"    
                           Label="Game Style Type"
                           Variant="Variant.Outlined" >
                    <MudSelectItem Value="@(0)">--Select--</MudSelectItem>
                    <Iterations Items="_viewModel.GameStyleTypes" Context="gameStyleType">
                        <MudSelectItem Value="@gameStyleType.Id">@gameStyleType.Name</MudSelectItem>
                    </Iterations>	
                </MudSelect> 
            </ContentColumn2>
        </DivRowCol3>
        <DivRowCol3>
            <ContentColumn2>
                <div hidden="@(!_viewModel.DisplayGameDate)">
                    <MudDatePicker @bind-Date="_viewModel.GameDate"
                                   DateFormat="MM/dd/yyyy"
                                   Editable="true"
                                   Label="Game Date"
                                   Mask="@(new DateMask("MM/dd/yyyy"))" 
                                   Variant="Variant.Outlined" />
                </div> 
            </ContentColumn2>
        </DivRowCol3>
        <DivRowCol3>
            <Content>
                <MudSelect @bind-Value="@_viewModel.HelmetTypeId"
                           @bind-Value:event="ValueChanged"    
                           Label="Type"
                           Variant="Variant.Outlined" >
                    <MudSelectItem Value="@(0)">--Select--</MudSelectItem>
                    <Iterations Items="_viewModel.HelmetTypes" Context="helmetType">
                        <MudSelectItem Value="@helmetType.Id">@helmetType.Name</MudSelectItem>
                    </Iterations>	
                </MudSelect> 
            </Content>
            <ContentColumn2>
                <div hidden="@(!_viewModel.DisplayHelmetQualityType)">
                    <MudSelect @bind-Value="@_viewModel.HelmetTypeId"
                               @bind-Value:event="ValueChanged"  
                               Disabled="!_viewModel.CanEditHelmetQualityType"
                               Label="Quality"
                               Variant="Variant.Outlined" >
                        <MudSelectItem Value="@(0)">--Select--</MudSelectItem>
                        <Iterations Items="_viewModel.HelmetQualityTypes" Context="helmetQualityType">
                            <MudSelectItem Value="@helmetQualityType.Id">@helmetQualityType.Name</MudSelectItem>
                        </Iterations>	
                    </MudSelect> 
                </div> 
            </ContentColumn2>
        </DivRowCol3>
        <DivRowCol3>
            <Content>
                <div hidden="@(!_viewModel.DisplayHelmetFinish)">
                    <MudSelect @bind-Value="@_viewModel.HelmetFinishId"
                               @bind-Value:event="ValueChanged"    
                               Label="Finish"
                               Variant="Variant.Outlined" >
                        <MudSelectItem Value="@(0)">--Select--</MudSelectItem>
                        <Iterations Items="_viewModel.HelmetFinishes" Context="helmetFinish">
                            <MudSelectItem Value="@helmetFinish.Id">@helmetFinish.Name</MudSelectItem>
                        </Iterations>	
                    </MudSelect> 
                </div> 
            </Content>
        </DivRowCol3>
        <DivRowCol3>
            <Content>
                <MudCheckBox @bind-Checked="@_viewModel.Throwback" 
                             Label="Is a Throwback?" /> 
            </Content>
        </DivRowCol3>
        <PersonSelector AllowMultiple="true"
                        CanToggle="true"
                        ItemType="_viewModel.ItemType"
                        People="_viewModel.People" />                 
        <TeamSelector AllowMultiple="true"
                      CanToggle="true" 
                      ItemType="_viewModel.ItemType"
                      Teams="_viewModel.Teams" />
    </Content>
</EditPage>