@page "/Memorabilia/Figure/Edit/{memorabiliaId:int}"

@using Memorabilia.Application.Features.Admin.Person
@using Memorabilia.Application.Features.Admin.Team
@using Memorabilia.Application.Features.Memorabilia
@using Memorabilia.Application.Features.Memorabilia.Figure
@using Memorabilia.Domain.Constants
@using Memorabilia.Web.Controls.Figure
@using Memorabilia.Web.Controls.ItemTypeBrand
@using Memorabilia.Web.Controls.ItemTypeLevel
@using Memorabilia.Web.Controls.ItemTypeSize
@using Memorabilia.Web.Controls.Person
@using Memorabilia.Web.Controls.SportLeagueLevel
@using Memorabilia.Web.Controls.Team

@inject CommandRouter _commandRouter
@inject ProtectedLocalStorage _localStorage
@inject NavigationManager _navigation
@inject QueryRouter _queryRouter
@inject IToastService _toastService

@if (!_pageLoaded)
{
    <_PageLoader />
}
else
{
    <div class="row">
        <div class="col-md-12" style="text-align: center">
            <h1>@_viewModel.PageTitle</h1>
        </div>
    </div>
    <br />
    <div style="border: 1px solid black; margin-top: 2%; margin-bottom: 2%; margin-left: 2%; margin-right: 2%;">
        <div class="row" style="margin-top: 2%; margin-bottom: 2%; margin-left: 1%; margin-right: 1%;">
            <div class="col-lg-12" style="text-align: center">
                <img src="images/itemtypes.jpg" alt="Image" height="150" width="150" />
            </div>            
            <EditForm Model="_viewModel" OnValidSubmit="HandleValidSubmit">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <div class="row">
                    <div class="col-lg-6">
                        <div class="form-group">
                            <label for="level">Level</label>
                            <_ItemTypeLevelDropDown @bind-Value="@_viewModel.LevelTypeId"
                                                    @bind-Value:event="ValueChanged" 
                                                    ItemType="_viewModel.ItemType" /> 
                        </div> 
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group">
                            <label for="brand">Brand</label>
                            <_ItemTypeBrandDropDown @bind-Value="@_viewModel.BrandId" 
                                                    @bind-Value:event="ValueChanged"
                                                    ItemType="_viewModel.ItemType" />
                        </div> 
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-6">
                        <div class="form-group">
                            <label for="size">Size</label>
                            <_ItemTypeSizeDropDown @bind-Value="@_viewModel.SizeId"
                                                   @bind-Value:event="ValueChanged" 
                                                   ItemType="_viewModel.ItemType" /> 
                        </div> 
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group">
                            <label for="type">Type</label>
                            <_FigureTypeDropDown @bind-Value="@_viewModel.FigureTypeId" 
                                                 @bind-Value:event="ValueChanged" />
                        </div> 
                    </div>                    
                </div>
                <div class="row">                    
                    <div class="col-lg-6">
                        <div class="form-group">
                            <label for="year">Year</label>
                            <InputNumber id="year" class="form-control" @bind-Value="@_viewModel.Year" />                    
                        </div> 
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group">
                            <label for="specialtyType">Specialty Type</label>
                            <_FigureSpecialtyTypeDropDown @bind-Value="@_viewModel.FigureSpecialtyTypeId" 
                                                          @bind-Value:event="ValueChanged"
                                                          FigureType="FigureType.Find(_viewModel.FigureTypeId)" />
                        </div> 
                    </div> 
                </div> 
                <_PersonSelector AllowMultiple="true"
                                 CanToggle="true"
                                 ItemType="_viewModel.ItemType"
                                 People="_viewModel.People" />                 
                <_TeamSelector AllowMultiple="true"
                               CanToggle="true" 
                               ItemType="_viewModel.ItemType"
                               Teams="_viewModel.Teams" />                             
                <div class="text-right">
                    <button type="submit" class="btn btn-primary" @onclick="@(()=> _continue = true)">Save & Continue</button>
                    <button type="submit" class="btn btn-primary">Save & Exit</button>
                    <button type="button" class="btn btn-secondary" @onclick="@(_ => _navigation.NavigateTo("Memorabilia"))">Cancel</button>
                </div>
            </EditForm>
        </div>
        <div class="row">
            <div class="col-md-12" style="text-align: center">
                <a href="Memorabilia/Items">Back</a>
            </div>
        </div>
        <br />
    </div>
}

@code {
    [Parameter]
    public int MemorabiliaId { get; set; }

    private bool _continue;
    private bool _pageLoaded;
    private SaveFigureViewModel _viewModel = new SaveFigureViewModel();

    protected async Task HandleValidSubmit()
    {
        var userId = await _localStorage.GetAsync<int>("UserId").ConfigureAwait(false);

        if (userId.Value == 0)
            _navigation.NavigateTo("Login");  

        _viewModel.MemorabiliaId = MemorabiliaId;

        var command = new SaveFigure.Command(_viewModel);

        await _commandRouter.Send(command).ConfigureAwait(false);

        var url = _continue ? $"Memorabilia/Image/Edit/{command.MemorabiliaId}" : "Memorabilia";

        _navigation.NavigateTo(url);

        _toastService.ShowSuccess("Figure Details were saved successfully!", _viewModel.PageTitle);
    }

    protected override async Task OnInitializedAsync()
    {
        var userId = await _localStorage.GetAsync<int>("UserId").ConfigureAwait(false);

        if (userId.Value == 0)
            _navigation.NavigateTo("Login");        

        var query = new GetFigure.Query(MemorabiliaId);
        var viewModel = await _queryRouter.Send(query).ConfigureAwait(false); 
        
        if (viewModel.Brand == null)
        {
            SetDefaults();
            _pageLoaded = true;
            return;
        }

        _viewModel = new SaveFigureViewModel(viewModel);   
        _pageLoaded = true;
    }   

    private void SetDefaults()
    {
        _viewModel.LevelTypeId = LevelType.Professional.Id;
        _viewModel.SizeId = Size.Standard.Id;        
    }
}