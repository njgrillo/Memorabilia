@inherits EditPersonItem<PersonOccupationsEditModel, PersonOccupationModel>

<PageLoader IsLoading="@(!IsLoaded)">
    <PageEditor DisplayBackToMenuItemLink="true"
                EditModel="EditModel"
                MenuItemLinkText="Back to People"
                MenuItemPath="@EditModel.MenuItemPath"             
                OnSave="Save"
                PageImageFileName="@EditModel.ImageFileName"
                TItem="PersonOccupationsEditModel">
        <TimelineContent>
            <PersonTimeline EditMode="EditModel.EditModeType"
                            PersonId="EditModel.PersonId"
                            PersonStep="EditModel.PersonStep" />
        </TimelineContent>
        <ChildContent>
            <Div Class="d-flex justify-content-between"
                 Style="width:100%">
                <Div Style="width:48%">
                    <TabControl>
                        <MudTabPanel BadgeColor="MudBlazor.Color.Success"
                                     BadgeData="EditModel.Occupations.Count(occupation => !occupation.IsDeleted)"
                                     Text="Occupations">
                            <DivRowCol12>
                                <PersonOccupationSelector Occupations="EditModel.Occupations"
                                                          OnOccupationChange="@(() => StateHasChanged())" />
                            </DivRowCol12>
                        </MudTabPanel>
                        <Condition Evaluation="@EditModel.HasAthleteOccupation">
                            <Match>
                                <MudTabPanel BadgeColor="MudBlazor.Color.Success"
                                             BadgeData="EditModel.Sports.Count(sport => !sport.IsDeleted)"
                                             Text="Sports">
                                    <DivRowCol12>
                                        <PersonSportEditor OnSportChange="@(() => StateHasChanged())"
                                                           Sports="EditModel.Sports" />
                                    </DivRowCol12>
                                </MudTabPanel>
                            </Match>
                        </Condition>
                        <Condition Evaluation="@EditModel.HasPositionSport">
                            <Match>
                                <MudTabPanel BadgeColor="MudBlazor.Color.Success"
                                             BadgeData="EditModel.Positions.Count(position => !position.IsDeleted)"
                                             Text="Positions">
                                    <DivRowCol12>
                                        <PersonPositionEditor Positions="EditModel.Positions"
                                                              Sports="@(EditModel.Sports.Select(sport => sport.Sport).ToArray())" />
                                    </DivRowCol12>
                                </MudTabPanel>
                            </Match>
                        </Condition>
                    </TabControl>
                </Div>
                <Div Style="width:48%;margin-bottom:1%;">
                    <PersonRecentOccupationSelector OnRecentOccupationChange="OnRecentOccupationChange"
                                                    RecentOccupations="RecentPersonOccupations" />
                </Div>
            </Div>
        </ChildContent>
    </PageEditor>
</PageLoader>

