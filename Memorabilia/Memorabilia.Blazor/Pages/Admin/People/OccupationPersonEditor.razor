@inherits EditPersonItem<SavePersonOccupationsViewModel, PersonOccupationViewModel>

<EditPage ContinueNavigationPath="@ViewModel.ContinueNavigationPath"
          DomainImageRootPath="@DomainImageRootPath"
          EditMode="ViewModel.EditModeType"
          ExitNavigationPath="@ViewModel.ExitNavigationPath"
          ImageFileName="@ViewModel.ImageFileName"
          ItemName="@ViewModel.ItemTitle"
          Model="ViewModel"
          OnLoad="OnLoad"
          OnSave="HandleValidSubmit"
          PageFooterButtonText="@ViewModel.ExitButtonText"
          PageFooterNavigationPath="@ViewModel.BackNavigationPath"
          PageTitle="@ViewModel.PageTitle"
          TItem="SavePersonOccupationsViewModel"
          UseMultipleButtons="true">
    <TimelineContent>
        <PersonTimeline EditMode="ViewModel.EditModeType"
                        PersonId="ViewModel.PersonId"
                        PersonStep="ViewModel.PersonStep" />
    </TimelineContent>
    <Content>
        <div class="d-flex justify-content-between" style="width:100%">
            <div style="width:48%">
                <MudTabs ApplyEffectsToContainer="true"
                         Centered="true"
                         Elevation="2"
                         PanelClass="pa-6"
                         Rounded="true">
                    <MudTabPanel BadgeColor="MudBlazor.Color.Success"
                                 BadgeData="ViewModel.Occupations.Count(occupation => !occupation.IsDeleted)"
                                 Text="Occupations">
                        <DivRowCol12>
                            <Content>
                                <PersonOccupationSelector Occupations="ViewModel.Occupations"
                                                          OnOccupationChange="@(() => StateHasChanged())" />
                            </Content>
                        </DivRowCol12>
                    </MudTabPanel>
                    <PrettyBlazor.Condition Evaluation="@ViewModel.HasAthleteOccupation">
                        <Match>
                            <MudTabPanel BadgeColor="MudBlazor.Color.Success"
                                         BadgeData="ViewModel.Sports.Count(sport => !sport.IsDeleted)"
                                         Text="Sports">
                                <DivRowCol12>
                                    <Content>
                                        <PersonSportEditor OnSportChange="@(() => StateHasChanged())"
                                                           Sports="ViewModel.Sports" />
                                    </Content>
                                </DivRowCol12>
                            </MudTabPanel>
                        </Match>
                    </PrettyBlazor.Condition>
                    <PrettyBlazor.Condition Evaluation="@ViewModel.HasPositionSport">
                        <Match>
                            <MudTabPanel BadgeColor="MudBlazor.Color.Success"
                                         BadgeData="ViewModel.Positions.Count(position => !position.IsDeleted)"
                                         Text="Positions">
                                <DivRowCol12>
                                    <Content>
                                        <PersonPositionEditor Positions="ViewModel.Positions"
                                                              Sports="@(ViewModel.Sports.Select(sport => sport.Sport).ToArray())" />
                                    </Content>
                                </DivRowCol12>
                            </MudTabPanel>
                        </Match>                        
                    </PrettyBlazor.Condition>                    
                </MudTabs>
            </div>
            <div style="width:48%">
                <PersonRecentOccupationSelector OnRecentOccupationChange="OnRecentOccupationChange"
                                                RecentOccupations="RecentPersonOccupations" />
            </div>        
        </div>
    </Content>
</EditPage>