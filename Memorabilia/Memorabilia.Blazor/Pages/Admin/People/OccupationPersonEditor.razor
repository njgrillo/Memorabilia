@inherits EditPersonItem<PersonOccupationsEditModel, PersonOccupationModel>

<EditPage ContinueNavigationPath="@EditModel.ContinueNavigationPath"
          EditMode="EditModel.EditModeType"
          ExitNavigationPath="@EditModel.ExitNavigationPath"
          ImageFileName="@EditModel.ImageFileName"
          ItemName="@EditModel.ItemTitle"
          Model="EditModel"
          OnSave="HandleValidSubmit"
          PageFooterButtonText="@EditModel.ExitButtonText"
          PageFooterNavigationPath="@EditModel.BackNavigationPath"
          PageTitle="@EditModel.PageTitle"
          TItem="PersonOccupationsEditModel"
          UseMultipleButtons="true">
    <TimelineContent>
        <PersonTimeline EditMode="EditModel.EditModeType"
                        PersonId="EditModel.PersonId"
                        PersonStep="EditModel.PersonStep" />
    </TimelineContent>
    <ChildContent>
        <Div Class="d-flex justify-content-between" 
             Style="width:100%">
            <Div Style="width:48%">
                <MudTabs ApplyEffectsToContainer="true"
                         Centered="true"
                         Elevation="2"
                         PanelClass="pa-6"
                         Rounded="true">
                    <MudTabPanel BadgeColor="MudBlazor.Color.Success"
                                 BadgeData="EditModel.Occupations.Count(occupation => !occupation.IsDeleted)"
                                 Text="Occupations">
                        <DivRowCol12>
                            <PersonOccupationSelector Occupations="EditModel.Occupations"
                                                      OnOccupationChange="@(() => StateHasChanged())" />
                        </DivRowCol12>
                    </MudTabPanel>
                    <Condition Evaluation="@EditModel.HasAthleteOccupation">
                        <Match>
                            <MudTabPanel BadgeColor="MudBlazor.Color.Success"
                                         BadgeData="EditModel.Sports.Count(sport => !sport.IsDeleted)"
                                         Text="Sports">
                                <DivRowCol12>
                                    <PersonSportEditor OnSportChange="@(() => StateHasChanged())"
                                                       Sports="EditModel.Sports" />
                                </DivRowCol12>
                            </MudTabPanel>
                        </Match>
                    </Condition>
                    <Condition Evaluation="@EditModel.HasPositionSport">
                        <Match>
                            <MudTabPanel BadgeColor="MudBlazor.Color.Success"
                                         BadgeData="EditModel.Positions.Count(position => !position.IsDeleted)"
                                         Text="Positions">
                                <DivRowCol12>
                                    <PersonPositionEditor Positions="EditModel.Positions"
                                                          Sports="@(EditModel.Sports.Select(sport => sport.Sport).ToArray())" />
                                </DivRowCol12>
                            </MudTabPanel>
                        </Match>                        
                    </Condition>                    
                </MudTabs>
            </Div>
            <Div Style="width:48%;margin-bottom:1%;">
                <PersonRecentOccupationSelector OnRecentOccupationChange="OnRecentOccupationChange"
                                                RecentOccupations="RecentPersonOccupations" />
            </Div>        
        </Div>
    </ChildContent>
</EditPage>