<PageLoader IsLoading="@(!IsLoaded)">
    <PageEditor ContinueNavigationPath="@_continueNavigationPath"
                DisplayFooter="false"              
                EditModel="EditModel"
                ExitNavigationPath="@NavigationPath.Memorabilia"
                OnSave="Save"
                PageImageFileName="@EditModel.ImageFileName"
                TItem="MemorabiliaEditModel">
        <TimelineContent>
            <MemorabiliaItemTimeline EditMode="EditModel.EditModeType"
                                     ItemTypeName="@EditModel.ItemTypeName"
                                     MemorabiliaId="EditModel.Id"
                                     MemorabiliaItemStep="EditModel.MemorabiliaItemStep" />
        </TimelineContent>
        <ChildContent>
            <DivRowFormGroup>
                <Div Class="col-3">
                    <ItemTypeAutoComplete Disabled="@(!EditModel.CanEditItemType)"
                                          SelectedValue="EditModel.ItemType"
                                          SelectionChanged="(p) => EditModel.ItemType = p" />
                </Div>
                <Div Class="col-3">
                    <ConditionDropDown SelectedValue="EditModel.ConditionId"
                                       SelectionChanged="(p) => EditModel.ConditionId = p" />
                </Div>
                <Div Class="col-3">
                    <NumericField Label="Estimated Value ($)"
                                  TType="decimal?"
                                  Value="EditModel.EstimatedValue"
                                  ValueChanged="@((p) => EditModel.EstimatedValue = p)" />
                </Div>
                <Div Class="col-3">
                    <PrivacyTypeDropDown SelectedValue="EditModel.PrivacyTypeId"
                                         SelectionChanged="(p) => EditModel.PrivacyTypeId = p" />
                </Div>
            </DivRowFormGroup>
            <DivRowFormGroup>
                <Div Class="col-3">
                    <AcquisitionTypeDropDown IsAutograph="false"
                                             SelectedValue="EditModel.AcquisitionTypeId"
                                             SelectionChanged="OnAcquisitionTypeChange" />
                </Div>
                <Div Class="col-3">
                    <MudDatePicker @bind-Date="EditModel.AcquiredDate"
                                   DateFormat="MM/dd/yyyy"
                                   Editable="true"
                                   Label="Acquired Date"
                                   Mask="@(new DateMask("MM/dd/yyyy"))"
                                   Variant="Variant.Outlined" />
                </Div>
                <Div Class="col-3"
                     Hidden="@(!EditModel.CanHaveCost)">
                    <NumericField Label="Cost ($)"
                                  TType="decimal?"
                                  Value="EditModel.Cost"
                                  ValueChanged="@((p) => EditModel.Cost = p)" />
                </Div>
                <Div Class="col-3"
                     Hidden="@(!EditModel.CanHaveCost)">
                    <PurchaseTypeDropDown SelectedValue="EditModel.PurchaseTypeId"
                                          SelectionChanged="(p) => EditModel.PurchaseTypeId = p" />
                </Div>
            </DivRowFormGroup>
            <DivRowFormGroup>
                <Div Class="col-6">
                    <TextField Label="Notes"
                               Lines="10"
                               SelectedText="@EditModel.Note"
                               SelectedTextChanged="@((p) => EditModel.Note = p)" />
                </Div>
                <Div Class="col-6">
                    <ExpansionPanel Text="Collections">
                        <MultiCollectionSelector SelectedCollections="EditModel.Collections" />
                    </ExpansionPanel>
                    <ExpansionPanel Text="Through The Mail"
                                    Visible="EditModel.ThroughTheMailIds.Any()">
                        <MemorabiliaThroughTheMailGrid ThroughTheMailIds="EditModel.ThroughTheMailIds" />
                    </ExpansionPanel>
                </Div>
            </DivRowFormGroup>
            <DivRowFormGroup>
                <Div Class="col-6">
                    <RowStack>
                        <Switch Checked="@EditModel.IsNumbered"
                                CheckedChanged="(p) => EditModel.IsNumbered = p"
                                Label="Is Numbered?" />
                        <Switch Checked="@EditModel.Framed"
                                CheckedChanged="(p) => EditModel.Framed = p"
                                Label="Is Framed?" />
                        <Switch Checked="@EditModel.AcquiredWithAutograph"
                                CheckedChanged="(p) => EditModel.AcquiredWithAutograph = p"
                                Label="Acquired with Autograph(s)?" />
                        <Switch Checked="@EditModel.ForTrade"
                                CheckedChanged="(p) => EditModel.ForTrade = p"
                                Label="Available For Trade?" />
                    </RowStack>
                </Div>
            </DivRowFormGroup>
            <DivRowFormGroup Hidden="@(!EditModel.IsNumbered)">
                <Div Class="col-3">
                    <Div Class="row">
                        <Div Style="padding-left:15px; width:45%; flex:auto;">
                            <NumericField Label="Left Serial #"
                                          TType="int?"
                                          Value="EditModel.Numerator"
                                          ValueChanged="@((p) => EditModel.Numerator = p)" />
                        </Div>
                        <Div Style="padding-right:15px; padding-left:5px; width:45%; flex:auto;">
                            <NumericField Label="Right Serial #"
                                          TType="int?"
                                          Value="EditModel.Denominator"
                                          ValueChanged="@((p) => EditModel.Denominator = p)" />
                        </Div>
                    </Div>
                </Div>
            </DivRowFormGroup>
        </ChildContent>
    </PageEditor>
</PageLoader>

