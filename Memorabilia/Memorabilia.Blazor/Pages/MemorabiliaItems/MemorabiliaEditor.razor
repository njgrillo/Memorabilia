@inherits ImagePage

<EditPage ContinueNavigationPath="@_viewModel.ContinueNavigationPath"
          DomainImageRootPath="@DomainImageRootPath"  
          DisplayFooter="false"
          EditMode="_viewModel.EditModeType"
          ExitNavigationPath="@_viewModel.ExitNavigationPath"
          ImageFileName="@_viewModel.ImageFileName"
          ItemName="@_viewModel.ItemTypeName"
          Model="_viewModel"
          OnLoad="OnLoad"
          OnSave="OnSave"
          PageTitle="@_viewModel.PageTitle"
          PerformValidation="true"
          TItem="MemorabiliaItemEditModel"
          UseMultipleButtons="true"
          ValidationResult="@_viewModel.ValidationResult">
    <TimelineContent>
        <MemorabiliaItemTimeline EditMode="_viewModel.EditModeType"
                                 ItemTypeName="@_viewModel.ItemTypeName"
                                 MemorabiliaId="_viewModel.Id"
                                 MemorabiliaItemStep="_viewModel.MemorabiliaItemStep" />
    </TimelineContent>
    <Content>
        <DivRowCol3>
            <Content>
                <ItemTypeAutoComplete Disabled="@(!_viewModel.CanEditItemType)" 
                                      SelectedValue="_viewModel.ItemType"
                                      SelectionChanged="(p) => _viewModel.ItemType = p" />
            </Content>
            <ContentColumn2>
                <ConditionDropDown SelectedValue="_viewModel.ConditionId"
                                   SelectionChanged="(p) => _viewModel.ConditionId = p" />
            </ContentColumn2>
            <ContentColumn3>
                <NumericField Label="Estimated Value ($)"
                              TType="decimal?"
                              Value="_viewModel.EstimatedValue"
                              ValueChanged="@((p) => _viewModel.EstimatedValue = p)" />
            </ContentColumn3>
            <ContentColumn4>
                <PrivacyTypeDropDown SelectedValue="_viewModel.PrivacyTypeId"
                                     SelectionChanged="(p) => _viewModel.PrivacyTypeId = p" />
            </ContentColumn4>
        </DivRowCol3>
        <DivRowCol3 HideColumn3="@(!_viewModel.CanHaveCost)"
                    HideColumn4="@(!_viewModel.CanHaveCost)">
            <Content>
                <AcquisitionTypeDropDown IsAutograph="false"
                                         SelectedValue="_viewModel.AcquisitionTypeId"
                                         SelectionChanged="OnAcquisitionTypeChange" />
            </Content>
            <ContentColumn2>
                <MudDatePicker @bind-Date="_viewModel.AcquiredDate"
                               DateFormat="MM/dd/yyyy"
                               Editable="true"
                               Label="Acquired Date"
                               Mask="@(new DateMask("MM/dd/yyyy"))"
                               Variant="Variant.Outlined" />
            </ContentColumn2>
            <ContentColumn3>
                <NumericField Label="Cost ($)" 
                              TType="decimal?"
                              Value="_viewModel.Cost"
                              ValueChanged="@((p) => _viewModel.Cost = p)" />
            </ContentColumn3>
            <ContentColumn4>
                <PurchaseTypeDropDown SelectedValue="_viewModel.PurchaseTypeId"
                                      SelectionChanged="(p) => _viewModel.PurchaseTypeId = p" />
            </ContentColumn4>
        </DivRowCol3>
        <DivRowCol6>
            <Content>
                <TextField Label="Notes"
                           Lines="10"
                           SelectedText="@_viewModel.Note"
                           SelectedTextChanged="@((p) => _viewModel.Note = p)" />
            </Content>
            <ContentColumn2>
                <MultiCollectionSelector SelectedCollections="_viewModel.Collections" 
                                         UserId="_viewModel.UserId" />
            </ContentColumn2>
        </DivRowCol6>
        <DivRowCol6>
            <Content>
                <MudStack Row="true">
                    <MudSwitch Checked="@_viewModel.IsNumbered"
                               CheckedChanged="(p) => _viewModel.IsNumbered = p"
                               Color="MudBlazor.Color.Success"
                               Label="Is Numbered?"
                               T="bool" />
                    <MudSwitch Checked="@_viewModel.Framed"
                               CheckedChanged="(p) => _viewModel.Framed = p"
                               Color="MudBlazor.Color.Success"
                               Label="Is Framed?"
                               T="bool" />
                    <MudSwitch Checked="@_viewModel.AcquiredWithAutograph"
                               CheckedChanged="(p) => _viewModel.AcquiredWithAutograph = p"
                               Color="MudBlazor.Color.Success"
                               Label="Acquired with Autograph(s)?"
                               T="bool" />                    
                    <MudSwitch Checked="@_viewModel.ForTrade"
                               CheckedChanged="(p) => _viewModel.ForTrade = p"
                               Color="MudBlazor.Color.Success"
                               Label="Available For Trade?"
                               T="bool" />
                </MudStack>
            </Content>
        </DivRowCol6>
        <DivRowCol3 Hidden="@(!_viewModel.IsNumbered)">
            <Content>
                <div class="row">
                    <div style="padding-left:15px; width:45%; flex:auto;">
                        <NumericField Label="Left Serial #"
                                      TType="int?"
                                      Value="_viewModel.Numerator"
                                      ValueChanged="@((p) => _viewModel.Numerator = p)" />
                    </div>
                    <div style="padding-right:15px; padding-left:5px; width:45%; flex:auto;">
                        <NumericField Label="Right Serial #"
                                      TType="int?"
                                      Value="_viewModel.Denominator"
                                      ValueChanged="@((p) => _viewModel.Denominator = p)" />
                    </div>
                </div>
            </Content>
        </DivRowCol3>        
    </Content>
</EditPage>