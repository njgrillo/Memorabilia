<MudTable Bordered="false"
          CanCancelEdit="true"
          CommitEditTooltip="Save"
          Dense="false"
          Hover="true"
          Items="Items.Where(item => !item.IsDeleted)"
          RowEditCancel="ResetItemToOriginalValues"
          RowEditCommit="UpdateCost"
          RowEditPreview="BackupItem"
          Striped="true">
    <ToolBarContent>
        <ToolbarTitle Text="Items" />
    </ToolBarContent>
    <HeaderContent>
        <MudTh></MudTh>
        <MudTh>Item</MudTh>
        <MudTh>Fee/Donation</MudTh>      
        <MudTh></MudTh>
        <MudTh></MudTh>
        <MudTh></MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd>
            <GridImage AllowNavigation="true" 
                       ImageData="@(ImageService.GetUserImageData(context.PrimaryImageFileName))"
                       ImageLoaded="StateHasChanged"
                       OnClick="@(_ => Navigate(context.AutographId.HasValue
			                           ? $"{NavigationPath.MemorabiliaImage}/{Constant.EditModeType.Update.Name}/{DataProtectorService.EncryptId(context.AutographId.Value)}"
			                           : $"{NavigationPath.MemorabiliaImage}/{Constant.EditModeType.Update.Name}/{DataProtectorService.EncryptId(context.MemorabiliaId)}"))" />
        </MudTd>
        <MudTd DataLabel="Item">@context.ItemTypeName</MudTd>
        <MudTd DataLabel="Fee/Donation">@(context.Cost?.ToString("c") ?? string.Empty)</MudTd>
        <MudTd>
            @(context.ReceivedDate.HasValue && context.IsExtraReceived ? "This was an extra received." : "")
        </MudTd>               
        <MudTd>
            <Fab Color="MudBlazor.Color.Secondary"                 
                 OnClick="@(_ => AddAutographLink(context))"
                 StartIcon="@Icons.Material.Outlined.AddLink"
                 TooltipText="Link to Autograph"
                 Visible="@(!context.AutographId.HasValue)" />
        </MudTd>
        <TableDataRightAligned>
            <DeleteGridButton OnDelete="@(_ => context.IsDeleted = true)" />
        </TableDataRightAligned>
    </RowTemplate>
    <RowEditingTemplate>
        <MudTd>
            <GridImage AllowNavigation="false" 
                       ImageData="@(ImageService.GetUserImageData(context.PrimaryImageFileName))"
                       ImageLoaded="StateHasChanged" />
        </MudTd>
        <MudTd DataLabel="Item">@context.ItemTypeName</MudTd>
        <MudTd DataLabel="Fee/Donation">
            <NullableDecimalField Value="context.Cost"
                                  ValueChanged="@((p) => context.Cost = p)" />
        </MudTd>
        <MudTd>
            @(context.ReceivedDate.HasValue && context.IsExtraReceived ? "This was an extra received." : "")
        </MudTd>
        <MudTd>
            <Fab Color="MudBlazor.Color.Secondary"
                 StartIcon="@Icons.Material.Outlined.AddLink"
                 TooltipText="Link to Autograph"
                 Visible="@(!context.AutographId.HasValue)" />
        </MudTd>
        <TableDataRightAligned>
            @* Figure out if this needs delete implementation *@
            <DeleteGridButton OnDelete="@(_ => context.IsDeleted = true)" />
            <Fab Color="MudBlazor.Color.Secondary"
                 StartIcon="@Icons.Material.Outlined.DeleteOutline"
                 TooltipText="Delete" />
        </TableDataRightAligned>
    </RowEditingTemplate>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>
