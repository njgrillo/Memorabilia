<div style="margin-top:1%;margin-left:1%">
    <PrettyBlazor.Condition Evaluation="@(ValidationResultAlerts.Any())">
        <Match>
            <AlertPanel Alerts="ValidationResultAlerts" />
        </Match>
    </PrettyBlazor.Condition>
    <DivRowCol3>
        <Content>
            <h3>
                Project Details
            </h3>
        </Content>
    </DivRowCol3>
    <DivRowCol3>
        <Content>
            <TextField Label="Name"
                       MaxLength="1000"
                       SelectedText="@Model.Name"
                       SelectedTextChanged="@((p) => Model.Name = p)" />
        </Content>
        <ContentColumn2>
            <MudDatePicker @bind-Date="Model.StartDate"
                           DateFormat="MM/dd/yyyy"
                           Editable="true"
                           Label="Start Date"
                           Mask="@(new DateMask("MM/dd/yyyy"))"
                           Variant="Variant.Outlined" />
        </ContentColumn2>
        <ContentColumn3>
            <MudDatePicker @bind-Date="Model.EndDate"
                           DateFormat="MM/dd/yyyy"
                           Editable="true"
                           Label="End Date"
                           Mask="@(new DateMask("MM/dd/yyyy"))"
                           Variant="Variant.Outlined" />
        </ContentColumn3>
    </DivRowCol3>
    <ProjectSelector Disabled="@(Model.Id > 0)" 
                     OnProjectTypeSelected="OnProjectTypeSelected"
                     SelectedProjectType="Model.ProjectType" />
    <br /> 
    <Condition Evaluation="@(Model.ProjectType != null && ProjectTypeComponent != null)">
        <Match>
            <DynamicComponent Parameters="@ProjectTypeParameters"
                              Type="@ProjectTypeComponent" />
        </Match>
    </Condition>
    <br /> 
    <Condition Evaluation="@(Model.Id > 0)">
        <Match>
            <div class="row" style="margin-left:1%;margin-right:1%">
                <MudProgressLinear Class="my-7"
                                   Color="MudBlazor.Color.Success"
                                   Size="MudBlazor.Size.Large"
                                   Value="Model.StatusPercentage">
                    <MudText Color="MudBlazor.Color.Dark"
                             Typo="Typo.subtitle1">
                        <b>@(Model.StatusPercentage)%</b>
                    </MudText>
                </MudProgressLinear>
            </div>
        </Match>
    </Condition>    
    <Condition Evaluation="@(Model.ProjectType.IsPersonProject())"> 
        <Match>
            <Condition Evaluation="Model.People.Any()">
                <Match>
                    <div class="row" style="margin-left:1%;margin-right:1%">
                        <div class="col-6">
                            <ProjectPriority MustHaveCount="Model.People.Count(person => person.PriorityTypeId == Domain.Constants.PriorityType.MustHave.Id)"
                                             NiceToHaveCount="Model.People.Count(person => person.PriorityTypeId == Domain.Constants.PriorityType.NiceToHave.Id)"
                                             NoWayCount="Model.People.Count(person => person.PriorityTypeId == Domain.Constants.PriorityType.NoWay.Id)"
                                             TakeItOrLeaveItCount="Model.People.Count(person => person.PriorityTypeId == Domain.Constants.PriorityType.TakeItOrLeaveIt.Id)" />
                        </div>
                        <div class="col-2" />
                        <div class="col-4">
                            <ProjectStatus CompletedCount="Model.People.Count(person => person.ProjectStatusTypeId == Domain.Constants.ProjectStatusType.Completed.Id)"
                                           InProgressCount="Model.People.Count(person => person.ProjectStatusTypeId == Domain.Constants.ProjectStatusType.InProgress.Id)"
                                           NotStartedCount="Model.People.Count(person => person.ProjectStatusTypeId == 0 || person.ProjectStatusTypeId == Domain.Constants.ProjectStatusType.NotStarted.Id)" />
                        </div>
                    </div>
                    <br />
                    <div class="row" style="margin-left:1%;margin-right:1%">
                        <MudChipSet>
                            <MudChip Color="MudBlazor.Color.Success">@($"Linked to Autograph - {Model.People.Count(person => person.AutographId > 0)}")</MudChip>
                                <MudChip Color="MudBlazor.Color.Info">@($"Not Linked to Autograph - {Model.People.Count(person => person.AutographId == 0)}")</MudChip>
                            </MudChipSet>
                            <MudChipSet>
                                <MudChip Color="MudBlazor.Color.Success">@($"Upgrade - {Model.People.Count(person => person.Upgrade)}")</MudChip>
                                <MudChip Color="MudBlazor.Color.Info">@($"Not Upgrade - {Model.People.Count(person => !person.Upgrade)}")</MudChip>
                            </MudChipSet>
                            <MudChipSet>
                                <MudChip Color="MudBlazor.Color.Success">@($"Living - {Model.People.Count(person => !person.Deceased)}")</MudChip>
                                <MudChip Color="MudBlazor.Color.Info">@($"Deceased - {Model.People.Count(person => person.Deceased)}")</MudChip>
                            </MudChipSet>
                        </div>
                        <br />
                </Match>
            </Condition>            
            <Condition Evaluation="@(Model.ProjectType == ProjectType.BaseballType)"> 
                <Match>
                    <BaseballTypeDetails Model="Model" />
                    <br />
                </Match>
            </Condition>
            <Condition Evaluation="@(Model.ProjectType == ProjectType.Card)">
                <Match>
                    <CardDetails Model="Model" />
                    <br />
                </Match>
            </Condition>
            <Condition Evaluation="@(Model.ProjectType == ProjectType.HallOfFame)">
                <Match>
                    <HallofFameDetails Model="Model" />
                    <br />
                </Match>
            </Condition>
            <Condition Evaluation="@(Model.ProjectType == ProjectType.ItemType)">
                <Match>
                    <ItemTypeDetails Model="Model" />
                    <br />
                </Match>
            </Condition>
            <Condition Evaluation="@(Model.ProjectType == ProjectType.Team)">
                <Match>
                    <TeamDetails Model="Model" />
                    <br />
                </Match>
            </Condition>  
            <Condition Evaluation="@(Model.ProjectType == ProjectType.WorldSeries)">
                <Match>
                    <WorldSeriesDetails Model="Model" />
                    <br />
                </Match>
            </Condition>
        </Match>
    </Condition>
    <Condition Evaluation="@(Model.ProjectType.IsTeamProject())">
        <Match>
            <Condition Evaluation="Model.MemorabiliaTeams.Any()">
                <Match>
                        <div class="row" style="margin-left:1%;margin-right:1%">
                            <div class="col-6">
                                <ProjectPriority MustHaveCount="Model.MemorabiliaTeams.Count(team => team.PriorityTypeId == Domain.Constants.PriorityType.MustHave.Id)"
                                                 NiceToHaveCount="Model.MemorabiliaTeams.Count(team => team.PriorityTypeId == Domain.Constants.PriorityType.NiceToHave.Id)"
                                                 NoWayCount="Model.MemorabiliaTeams.Count(team => team.PriorityTypeId == Domain.Constants.PriorityType.NoWay.Id)"
                                                 TakeItOrLeaveItCount="Model.MemorabiliaTeams.Count(team => team.PriorityTypeId == Domain.Constants.PriorityType.TakeItOrLeaveIt.Id)" />
                            </div>
                            <div class="col-2" />
                            <div class="col-4">
                                <ProjectStatus CompletedCount="Model.MemorabiliaTeams.Count(team => team.ProjectStatusTypeId == Domain.Constants.ProjectStatusType.Completed.Id)"
                                               InProgressCount="Model.MemorabiliaTeams.Count(team => team.ProjectStatusTypeId == Domain.Constants.ProjectStatusType.InProgress.Id)"
                                               NotStartedCount="Model.MemorabiliaTeams.Count(team => team.ProjectStatusTypeId == 0 || team.ProjectStatusTypeId == Domain.Constants.ProjectStatusType.NotStarted.Id)" />
                            </div>
                        </div>
                        <br />
                        <div class="row" style="margin-left:1%;margin-right:1%">
                            <MudChipSet>
                                <MudChip Color="MudBlazor.Color.Success">@($"Linked to Memorabilia - {Model.MemorabiliaTeams.Count(team => team.MemorabiliaId > 0)}")</MudChip>
                                <MudChip Color="MudBlazor.Color.Info">@($"Not Linked to Memorabilia - {Model.MemorabiliaTeams.Count(team => team.MemorabiliaId == 0)}")</MudChip>
                            </MudChipSet>
                            <MudChipSet>
                                <MudChip Color="MudBlazor.Color.Success">@($"Upgrade - {Model.MemorabiliaTeams.Count(team => team.Upgrade)}")</MudChip>
                                <MudChip Color="MudBlazor.Color.Info">@($"Not Upgrade - {Model.MemorabiliaTeams.Count(team => !team.Upgrade)}")</MudChip>
                            </MudChipSet>
                        </div>
                        <br />
                </Match>
            </Condition>            
            <Condition Evaluation="@(Model.ProjectType == ProjectType.HelmetType)">
                <Match>
                    <HelmetTypeDetails Model="Model" />
                    <br />
                </Match>
            </Condition>                          
        </Match>
    </Condition>
    <Condition Evaluation="@(Model.ProjectType != null)">
        <Match>
            <div style="margin-bottom:1%">
                <SaveButton OnClick="OnSave"
                            Text="Save" />
            </div>            
        </Match>
    </Condition>
</div>


