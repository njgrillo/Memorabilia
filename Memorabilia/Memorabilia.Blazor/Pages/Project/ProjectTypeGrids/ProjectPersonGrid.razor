<MudTable Bordered="false"
          CanCancelEdit="true"
          CommitEditTooltip="Save"
          Dense="false"
          Filter="new Func<ProjectPersonEditModel,bool>(FilterFunc1)"
          Hover="true"
          Items="@Items.Where(item => !item.IsDeleted).OrderBy(item => item.Rank)"
          RowEditCancel="ResetItemToOriginalValues"
          RowEditCommit="UpdateRanks"
          RowEditPreview="BackupItem"
          Striped="true">
    <ToolBarContent>
        <ToolbarTitle Text="Project People" />
        <MudSpacer />
        <ToolbarSearchField SearchText="@_search"
                            SearchTextChanged="@((p) => _search = p)" />
    </ToolBarContent>
    <HeaderContent>
        <MudTh></MudTh>
        <MudTh>
            <MudTableSortLabel SortBy="new Func<ProjectPersonEditModel, object>(x=>x.Rank)">
                Rank
            </MudTableSortLabel>
        </MudTh>
        <MudTh>
            <MudTableSortLabel SortBy="new Func<ProjectPersonEditModel, object>(x=>x.PriorityTypeName)">
                Priority
            </MudTableSortLabel>
        </MudTh>
        <MudTh></MudTh>
        <MudTh>
            <MudTableSortLabel SortBy="new Func<ProjectPersonEditModel, object>(x=>x.Person.DisplayName)">
                Person
            </MudTableSortLabel>
        </MudTh>
        <MudTh>
            <MudTableSortLabel SortBy="new Func<ProjectPersonEditModel, object>(x=>x.Deceased)">
                Deceased
            </MudTableSortLabel>
        </MudTh>
        <MudTh>
            <MudTableSortLabel SortBy="new Func<ProjectPersonEditModel, object>(x=>x.Upgrade)">
                Upgrade
            </MudTableSortLabel>
        </MudTh>    
        <MudTh>
            <MudTableSortLabel SortBy="new Func<ProjectPersonEditModel, object>(x=>x.EstimatedCost)">
                Estimated Cost
            </MudTableSortLabel>
        </MudTh>
        <MudTh>
            <MudTableSortLabel SortBy="new Func<ProjectPersonEditModel, object>(x=>x.ProjectStatusTypeName)">
                Status
            </MudTableSortLabel>
        </MudTh>
        <MudTh>
            Autograph
        </MudTh>
        <MudTh></MudTh>
        <MudTh></MudTh>
        <MudTh></MudTh>
    </HeaderContent>
    <RowTemplate Context="projectPerson">
        <MudTd>
            <MudIconButton @onclick="@(_ => MoveToTop(projectPerson.Rank ?? 0))"
                           hidden="@(!projectPerson.DisplayDoubleUpIcon)"
                           Icon="@projectPerson.DoubleUpIcon"></MudIconButton>
            <MudIconButton @onclick="@(_ => MoveUp(projectPerson.Rank ?? 0))"
                           hidden="@(!projectPerson.DisplayUpIcon)"
                           Icon="@projectPerson.UpIcon"></MudIconButton>
            <MudIconButton @onclick="@(_ => MoveDown(projectPerson.Rank ?? 0))"
                           Icon="@projectPerson.DownIcon"></MudIconButton>
            <MudIconButton @onclick="@(_ => MoveToBottom(projectPerson.Rank ?? 0))"
                           Icon="@projectPerson.DoubleDownIcon"></MudIconButton>
        </MudTd>
        <MudTd DataLabel="Rank">@projectPerson.Rank</MudTd>
        <MudTd DataLabel="Priority">@projectPerson.PriorityTypeName</MudTd>
        <MudTd DataLabel="">
            <MudImage @onclick="@(_ => ShowPersonProfile(projectPerson.Person.Id))"
                      Class="rounded-lg"
                      Elevation="5"
                      Height="200"
                      ObjectFit="@ObjectFit.Cover"
                      Src="@(ImageService.GetPersonImageData(projectPerson.Person.PersonImageFileName))"
                      Width="200" />
        </MudTd>
        <MudTd DataLabel="Person">@projectPerson.Person.DisplayName</MudTd>
        <MudTd DataLabel="Deceased">@(projectPerson.Deceased ? "Yes" : "No")</MudTd>        
        <MudTd DataLabel="Upgrade">@(projectPerson.Upgrade ? "Yes" : "No")</MudTd>        
        <MudTd DataLabel="EstimatedCost">@(projectPerson.EstimatedCost?.ToString("c") ?? string.Empty)</MudTd>
        <MudTd DataLabel="Status">@projectPerson.ProjectStatusTypeName</MudTd>
        <MudTd DataLabel="">
            <Condition Evaluation="@(projectPerson.AutographId > 0)">
                <Match>
                    <MudImage Class="rounded-lg"
                              Elevation="5"
                              Height="75"
                              ObjectFit="@ObjectFit.Cover"
                              Src="@(ImageService.GetUserImageData(projectPerson.AutographFileName, projectPerson.UserId))"
                              Width="75" />                      
                </Match>
            </Condition>            
        </MudTd>
        <MudTd DataLabel="">
            <Condition Evaluation="@(projectPerson.AutographId > 0)">
                <Match>
                    <MudTooltip Text="Remove link to Autograph">
                        <MudFab Color="MudBlazor.Color.Secondary"
                                StartIcon="@Icons.Material.Outlined.LinkOff"
                                OnClick="@(_ => projectPerson.AutographId = 0)"
                                Size="@MudBlazor.Size.Small" />
                    </MudTooltip>                   
                </Match>
                <NotMatch>
                    <MudTooltip Text="Link to Autograph">
                        <MudFab Color="MudBlazor.Color.Secondary"
                                StartIcon="@Icons.Material.Outlined.AddLink"
                                OnClick="@(_ => AddAutographLink(projectPerson))"
                                Size="@MudBlazor.Size.Small" />
                    </MudTooltip>                   
                </NotMatch>
            </Condition>            
        </MudTd>
        <MudTd DataLabel="">
            <Condition Evaluation="@(projectPerson.AutographId > 0)">
                <Match>
                    <ViewAutographImagesFab AutographId="projectPerson.AutographId"
                                            Size="MudBlazor.Size.Small" />
                </Match>
            </Condition>
        </MudTd>
        <MudTd DataLabel="">
            <DeleteGridButton OnDelete="@(_ => Remove(projectPerson.Id, projectPerson.Person.Id, projectPerson.ItemTypeId))"
                              Size="@MudBlazor.Size.Small" />
        </MudTd>
    </RowTemplate>
    <RowEditingTemplate>
        <MudTd>
            <MudIconButton @onclick="@(_ => MoveToTop(context.Rank ?? 0))"
                           hidden="@(!context.DisplayDoubleUpIcon)"
                           Icon="@context.DoubleUpIcon"></MudIconButton>
            <MudIconButton @onclick="@(_ => MoveUp(context.Rank ?? 0))"
                           hidden="@(!context.DisplayUpIcon)"
                           Icon="@context.UpIcon"></MudIconButton>
            <MudIconButton @onclick="@(_ => MoveDown(context.Rank ?? 0))"
                           Icon="@context.DownIcon"></MudIconButton>
            <MudIconButton @onclick="@(_ => MoveToBottom(context.Rank ?? 0))"
                           Icon="@context.DoubleDownIcon"></MudIconButton>
        </MudTd>
        <MudTd DataLabel="Rank">
            <MudNumericField @bind-Value="@context.Rank" Required Min="1" />
        </MudTd>
        <MudTd DataLabel="Priority">
            <PriorityTypeDropDown SelectedValue="@context.PriorityTypeId"
                                  SelectionChanged="(p) => context.PriorityTypeId = p" />
        </MudTd>
        <MudTd DataLabel="">
            <MudImage Class="rounded-lg"
                      Elevation="5"
                      Height="200"
                      ObjectFit="@ObjectFit.Cover"
                      Src="@(ImageService.GetPersonImageData(context.Person.PersonImageFileName))"
                      Width="200" />
        </MudTd>
        <MudTd DataLabel="Person">@context.Person.DisplayName</MudTd> 
        <MudTd DataLabel="Deceased">@(context.Deceased ? "Yes" : "No")</MudTd>
        <MudTd DataLabel="Upgrade">
            <BooleanCheckBox Checked="@context.Upgrade"
                             CheckedChanged="(p) => context.Upgrade = p"
                             Label="Is Upgrade" />
        </MudTd>   
        <MudTd DataLabel="EstimatedCost">
            <MudNumericField @bind-Value="@context.EstimatedCost" />
        </MudTd>
        <MudTd DataLabel="Status">
            <ProjectStatusTypeDropDown SelectedValue="@context.ProjectStatusTypeId"
                                       SelectionChanged="(p) => context.ProjectStatusTypeId = p" />
        </MudTd>
        <MudTd DataLabel="">
                <Condition Evaluation="@(context.AutographId > 0)">
                <Match>
                    <MudImage Class="rounded-lg"
                              Elevation="5"
                              Height="75"
                              ObjectFit="@ObjectFit.Cover"
                              Src="@(ImageService.GetUserImageData(context.AutographFileName))"
                              Width="75" />                      
                </Match>
            </Condition>            
        </MudTd>
        <MudTd DataLabel="">
            <Condition Evaluation="@(context.AutographId > 0)">
                <Match>
                    <MudTooltip Text="Remove link to Autograph">
                        <MudFab Color="MudBlazor.Color.Secondary"
                                StartIcon="@Icons.Material.Outlined.LinkOff"
                                OnClick="@(_ => context.AutographId = 0)"
                                Size="@MudBlazor.Size.Small" />
                    </MudTooltip>                    
                </Match>
                <NotMatch>
                    <MudTooltip Text="Link to Autograph">
                        <MudFab Color="MudBlazor.Color.Secondary"
                                StartIcon="@Icons.Material.Outlined.AddLink"
                                OnClick="@(_ => AddAutographLink(context))"
                                Size="@MudBlazor.Size.Small" />
                    </MudTooltip>                   
                </NotMatch>
            </Condition>            
        </MudTd>
        <MudTd DataLabel="">
            <Condition Evaluation="@(context.AutographId > 0)">
                <Match>
                    <ViewAutographImagesFab AutographId="context.AutographId"
                                            Size="MudBlazor.Size.Small" />
                </Match>
            </Condition>
        </MudTd>
        <MudTd DataLabel="">
            <DeleteGridButton OnDelete="@(_ => Remove(context.Id, context.Person.Id, context.ItemTypeId))"
                              Size="@MudBlazor.Size.Small" />
        </MudTd>
    </RowEditingTemplate>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>
