<MudTable Bordered="false"
          CanCancelEdit="true"
          CommitEditTooltip="Save"
          Dense="false"
          Filter="new Func<ProjectPersonEditModel,bool>(FilterFunc1)"
          Hover="true"
          Items="Items.Where(item => !item.IsDeleted).OrderBy(item => item.Rank)"
          RowEditCancel="ResetItemToOriginalValues"
          RowEditCommit="UpdateRanks"
          RowEditPreview="BackupItem"
          Striped="true">
    <ToolBarContent>
        <ToolbarTitle Text="Project People" />
        <MudSpacer />
        <ToolbarSearchField SearchText="@_search"
                            SearchTextChanged="@((p) => _search = p)" />
    </ToolBarContent>
    <HeaderContent>
        <MudTh></MudTh>
        <MudTh>
            <MudTableSortLabel SortBy="new Func<ProjectPersonEditModel, object>(x=>x.Rank)">
                Rank
            </MudTableSortLabel>
        </MudTh>
        <MudTh>
            <MudTableSortLabel SortBy="new Func<ProjectPersonEditModel, object>(x=>x.PriorityTypeName)">
                Priority
            </MudTableSortLabel>
        </MudTh>
        <MudTh></MudTh>
        <MudTh>
            <MudTableSortLabel SortBy="new Func<ProjectPersonEditModel, object>(x=>x.Person.DisplayName)">
                Person
            </MudTableSortLabel>
        </MudTh>
        <MudTh>
            <MudTableSortLabel SortBy="new Func<ProjectPersonEditModel, object>(x=>x.Deceased)">
                Deceased
            </MudTableSortLabel>
        </MudTh>
        <MudTh>
            <MudTableSortLabel SortBy="new Func<ProjectPersonEditModel, object>(x=>x.Upgrade)">
                Upgrade
            </MudTableSortLabel>
        </MudTh>    
        <MudTh>
            <MudTableSortLabel SortBy="new Func<ProjectPersonEditModel, object>(x=>x.EstimatedCost)">
                Estimated Cost
            </MudTableSortLabel>
        </MudTh>
        <MudTh>
            <MudTableSortLabel SortBy="new Func<ProjectPersonEditModel, object>(x=>x.ProjectStatusTypeName)">
                Status
            </MudTableSortLabel>
        </MudTh>
        <MudTh>
            Autograph
        </MudTh>
        <MudTh></MudTh>
        <MudTh></MudTh>
        <MudTh></MudTh>
    </HeaderContent>
    <RowTemplate Context="projectPerson">
        <MudTd>
            <IconButton Icon="@projectPerson.DoubleUpIcon"
                        OnClick="@(_ => MoveToTop(projectPerson.Rank ?? 0))"
                        Visible="projectPerson.DisplayDoubleUpIcon" />
            <IconButton Icon="@projectPerson.UpIcon"
                        OnClick="@(_ => MoveUp(projectPerson.Rank ?? 0))"
                        Visible="projectPerson.DisplayUpIcon" />
            <IconButton Icon="@projectPerson.DownIcon"
                        OnClick="@(_ => MoveDown(projectPerson.Rank ?? 0))" />
            <IconButton Icon="@projectPerson.DoubleDownIcon"
                        OnClick="@(_ => MoveToBottom(projectPerson.Rank ?? 0))" />
        </MudTd>
        <MudTd DataLabel="Rank">@projectPerson.Rank</MudTd>
        <MudTd DataLabel="Priority">@projectPerson.PriorityTypeName</MudTd>
        <MudTd DataLabel="">
            <PersonGridImage ImageData="@(ImageService.GetPersonImageData(projectPerson.Person.PersonImageFileName))"
                             ImageLoaded="StateHasChanged"
                             PersonId="projectPerson.Person.Id" />
        </MudTd>
        <MudTd DataLabel="Person">@projectPerson.Person.DisplayName</MudTd>
        <MudTd DataLabel="Deceased">@(projectPerson.Deceased ? "Yes" : "No")</MudTd>        
        <MudTd DataLabel="Upgrade">@(projectPerson.Upgrade ? "Yes" : "No")</MudTd>        
        <MudTd DataLabel="EstimatedCost">@(projectPerson.EstimatedCost?.ToString("c") ?? string.Empty)</MudTd>
        <MudTd DataLabel="Status">@projectPerson.ProjectStatusTypeName</MudTd>
        <MudTd DataLabel="">
            <GridImage Height="75"
                       ImageData="@(ImageService.GetUserImageData(projectPerson.AutographFileName, projectPerson.UserId))"
                       ImageLoaded="StateHasChanged"
                       Visible="@(projectPerson.AutographId > 0)"
                       Width="75" />
        </MudTd>
        <MudTd DataLabel="">
            <Fab Color="MudBlazor.Color.Secondary"
                 OnClick="@(_ => projectPerson.AutographId = 0)"
                 Size="MudBlazor.Size.Small"
                 StartIcon="@Icons.Material.Outlined.LinkOff"
                 TooltipText="Remove link to Autograph"
                 Visible="@(projectPerson.AutographId > 0)" />
            <Fab Color="MudBlazor.Color.Secondary"
                 OnClick="@(_ => AddAutographLink(projectPerson))"
                 Size="MudBlazor.Size.Small"
                 StartIcon="@Icons.Material.Outlined.AddLink"
                 TooltipText="Link to Autograph"
                 Visible="@(projectPerson.AutographId <= 0)" />
        </MudTd>
        <MudTd DataLabel="">
            <HiddenControl Visible="@(projectPerson.AutographId > 0)">
                <ViewAutographImagesFab AutographId="projectPerson.AutographId"
                                        Size="MudBlazor.Size.Small" />
            </HiddenControl>
        </MudTd>
        <MudTd DataLabel="">
            <DeleteGridButton OnDelete="@(_ => Remove(projectPerson.Id, projectPerson.Person.Id, projectPerson.ItemTypeId))"
                              Size="MudBlazor.Size.Small" />
        </MudTd>
    </RowTemplate>
    <RowEditingTemplate>
        <MudTd>
            <IconButton Icon="@context.DoubleUpIcon"
                        OnClick="@(_ => MoveToTop(context.Rank ?? 0))"
                        Visible="context.DisplayDoubleUpIcon" />
            <IconButton Icon="@context.UpIcon"
                        OnClick="@(_ => MoveUp(context.Rank ?? 0))"
                        Visible="context.DisplayUpIcon" />
            <IconButton Icon="@context.DownIcon"
                        OnClick="@(_ => MoveDown(context.Rank ?? 0))" />
            <IconButton Icon="@context.DoubleDownIcon"
                        OnClick="@(_ => MoveToBottom(context.Rank ?? 0))" />
        </MudTd>
        <MudTd DataLabel="Rank">
            <MudNumericField @bind-Value="@context.Rank"
                             Min="1" 
                             Required />
        </MudTd>
        <MudTd DataLabel="Priority">
            <PriorityTypeDropDown SelectedValue="@context.PriorityTypeId"
                                  SelectionChanged="(p) => context.PriorityTypeId = p" />
        </MudTd>
        <MudTd DataLabel="">
            <GridImage ImageData="@(ImageService.GetPersonImageData(context.Person.PersonImageFileName))"
                       ImageLoaded="StateHasChanged" />
        </MudTd>
        <MudTd DataLabel="Person">@context.Person.DisplayName</MudTd> 
        <MudTd DataLabel="Deceased">@(context.Deceased ? "Yes" : "No")</MudTd>
        <MudTd DataLabel="Upgrade">
            <BooleanCheckBox Checked="context.Upgrade"
                             CheckedChanged="(p) => context.Upgrade = p"
                             Label="Is Upgrade" />
        </MudTd>   
        <MudTd DataLabel="EstimatedCost">
            <MudNumericField @bind-Value="context.EstimatedCost" />
        </MudTd>
        <MudTd DataLabel="Status">
            <ProjectStatusTypeDropDown SelectedValue="context.ProjectStatusTypeId"
                                       SelectionChanged="(p) => context.ProjectStatusTypeId = p" />
        </MudTd>
        <MudTd DataLabel="">
            <GridImage Height="75"
                       ImageData="@(ImageService.GetUserImageData(context.AutographFileName))"
                       ImageLoaded="StateHasChanged"
                       Visible="@(context.AutographId > 0)"
                       Width="75" />
        </MudTd>
        <MudTd DataLabel="">
            <Fab Color="MudBlazor.Color.Secondary"
                 OnClick="@(_ => context.AutographId = 0)"
                 Size="MudBlazor.Size.Small"
                 StartIcon="@Icons.Material.Outlined.LinkOff"
                 TooltipText="Remove link to Autograph"
                 Visible="@(context.AutographId > 0)" />
            <Fab Color="MudBlazor.Color.Secondary"
                 OnClick="@(_ => AddAutographLink(context))"
                 Size="MudBlazor.Size.Small"
                 StartIcon="@Icons.Material.Outlined.AddLink"
                 TooltipText="Link to Autograph"
                 Visible="@(context.AutographId <= 0)" />
        </MudTd>
        <MudTd DataLabel="">
            <HiddenControl Visible="@(context.AutographId > 0)">
                <ViewAutographImagesFab AutographId="context.AutographId"
                                        Size="MudBlazor.Size.Small" />
            </HiddenControl>
        </MudTd>
        <MudTd DataLabel="">
            <DeleteGridButton OnDelete="@(_ => Remove(context.Id, context.Person.Id, context.ItemTypeId))"
                              Size="MudBlazor.Size.Small" />
        </MudTd>
    </RowEditingTemplate>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>
