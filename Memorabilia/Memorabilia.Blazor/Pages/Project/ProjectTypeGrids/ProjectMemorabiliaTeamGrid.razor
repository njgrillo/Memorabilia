<MudTable Bordered="false"
          CanCancelEdit="true"
          CommitEditTooltip="Save"
          Dense="false"
          Filter="new Func<ProjectMemorabiliaTeamEditModel,bool>(FilterFunc1)"
          Hover="true"
          Items="Items.Where(item => !item.IsDeleted).OrderBy(item => item.Rank)"
          RowEditCancel="ResetItemToOriginalValues"
          RowEditCommit="UpdateRanks"
          RowEditPreview="BackupItem"
          Striped="true">
    <ToolBarContent>
        <ToolbarTitle Text="Project Teams" />
        <MudSpacer />
        <ToolbarSearchField SearchText="@_search"
                            SearchTextChanged="@((p) => _search = p)" />
    </ToolBarContent>
    <HeaderContent>
        <MudTh></MudTh>
        <MudTh></MudTh>
        <MudTh>
            <MudTableSortLabel SortBy="new Func<ProjectMemorabiliaTeamEditModel, object>(x=>x.Rank)">
                Rank
            </MudTableSortLabel>
        </MudTh>
        <MudTh>
            <MudTableSortLabel SortBy="new Func<ProjectMemorabiliaTeamEditModel, object>(x=>x.PriorityTypeName)">
                Priority
            </MudTableSortLabel>
        </MudTh>
        <MudTh>
            <MudTableSortLabel SortBy="new Func<ProjectMemorabiliaTeamEditModel, object>(x=>x.Team.DisplayName)">
                Team
            </MudTableSortLabel>
        </MudTh>
        <MudTh>
            <MudTableSortLabel SortBy="new Func<ProjectMemorabiliaTeamEditModel, object>(x=>x.Upgrade)">
                Upgrade
            </MudTableSortLabel>
        </MudTh> 
        <MudTh>
            <MudTableSortLabel SortBy="new Func<ProjectMemorabiliaTeamEditModel, object>(x=>x.EstimatedCost)">
                Estimated Cost
            </MudTableSortLabel>
        </MudTh>
        <MudTh>
            <MudTableSortLabel SortBy="new Func<ProjectMemorabiliaTeamEditModel, object>(x=>x.ProjectStatusTypeName)">
                Status
            </MudTableSortLabel>
        </MudTh>
        <MudTh>
            Memorabilia
        </MudTh>
        <MudTh></MudTh>
        <MudTh></MudTh>
        <MudTh></MudTh>
    </HeaderContent>
    <RowTemplate Context="projectMemorabiliaTeam">
        <MudTd>
            <IconButton Icon="@projectMemorabiliaTeam.DoubleUpIcon"
                        OnClick="@(_ => MoveToTop(projectMemorabiliaTeam.Rank ?? 0))"
                        Visible="projectMemorabiliaTeam.DisplayDoubleUpIcon" />
            <IconButton Icon="@projectMemorabiliaTeam.UpIcon"
                        OnClick="@(_ => MoveUp(projectMemorabiliaTeam.Rank ?? 0))"
                        Visible="projectMemorabiliaTeam.DisplayUpIcon" />
            <IconButton Icon="@projectMemorabiliaTeam.DownIcon"
                        OnClick="@(_ => MoveDown(projectMemorabiliaTeam.Rank ?? 0))" />
            <IconButton Icon="@projectMemorabiliaTeam.DoubleDownIcon"
                        OnClick="@(_ => MoveToBottom(projectMemorabiliaTeam.Rank ?? 0))" />
        </MudTd>
        <MudTd>
            <GridImage ImageData="@(ImageService.GetDomainImageData(projectMemorabiliaTeam.TemplateImageFileName))"
                       ImageLoaded="StateHasChanged"
                       Visible="@(!projectMemorabiliaTeam.TemplateImageFileName.IsNullOrEmpty())" />
        </MudTd>
        <MudTd DataLabel="Rank">@projectMemorabiliaTeam.Rank</MudTd>
        <MudTd DataLabel="Priority">@projectMemorabiliaTeam.PriorityTypeName</MudTd>
        <MudTd DataLabel="Team">@projectMemorabiliaTeam.Team.DisplayName</MudTd>
        <MudTd DataLabel="Upgrade">@(projectMemorabiliaTeam.Upgrade ? "Yes" : "No")</MudTd>
        <MudTd DataLabel="EstimatedCost">@(projectMemorabiliaTeam.EstimatedCost?.ToString("c") ?? string.Empty)</MudTd>
        <MudTd DataLabel="Status">@projectMemorabiliaTeam.ProjectStatusTypeName</MudTd>
        <MudTd>
            <GridImage Height="75"
                       ImageData="@(ImageService.GetUserImageData(projectMemorabiliaTeam.MemorabiliaFileName))"
                       ImageLoaded="StateHasChanged"
                       Visible="@(projectMemorabiliaTeam.MemorabiliaId > 0)"
                       Width="75" />
        </MudTd>
        <MudTd>
            <Fab Color="MudBlazor.Color.Secondary"
                 OnClick="@(_ => projectMemorabiliaTeam.MemorabiliaId = 0)"
                 Size="MudBlazor.Size.Small"
                 StartIcon="@Icons.Material.Outlined.LinkOff"
                 TooltipText="Remove link to Memorabilia"
                 Visible="@(projectMemorabiliaTeam.MemorabiliaId > 0)" />
            <Fab Color="MudBlazor.Color.Secondary"
                 OnClick="@(_ => AddMemorabiliaLink(projectMemorabiliaTeam))"
                 Size="MudBlazor.Size.Small"
                 StartIcon="@Icons.Material.Outlined.AddLink"
                 TooltipText="Link to Memorabilia"
                 Visible="@(projectMemorabiliaTeam.MemorabiliaId <= 0)" />
        </MudTd>
        <MudTd>
            <HiddenControl Visible="@(projectMemorabiliaTeam.MemorabiliaId > 0)">
                <ViewMemorabiliaImagesFab MemorabiliaId="projectMemorabiliaTeam.MemorabiliaId"
                                          Size="MudBlazor.Size.Small" />
            </HiddenControl>
        </MudTd>
        <TableDataRightAligned>
            <DeleteGridButton OnDelete="@(_ => Remove(projectMemorabiliaTeam.Id, projectMemorabiliaTeam.Team.Id, projectMemorabiliaTeam.Rank, projectMemorabiliaTeam.ItemTypeId))"
                              Size="MudBlazor.Size.Small" />
        </TableDataRightAligned>
    </RowTemplate>
    <RowEditingTemplate>
        <MudTd>
            <IconButton Icon="@context.DoubleUpIcon"
                        OnClick="@(_ => MoveToTop(context.Rank ?? 0))"
                        Visible="context.DisplayDoubleUpIcon" />
            <IconButton Icon="@context.UpIcon"
                        OnClick="@(_ => MoveUp(context.Rank ?? 0))"
                        Visible="context.DisplayUpIcon" />
            <IconButton Icon="@context.DownIcon" 
                        OnClick="@(_ => MoveDown(context.Rank ?? 0))" />
            <IconButton Icon="@context.DoubleDownIcon"
                        OnClick="@(_ => MoveToBottom(context.Rank ?? 0))" />
        </MudTd>
        <MudTd DataLabel="Rank">
            <MudNumericField @bind-Value="@context.Rank" 
                             Required 
                             Min="1" />
        </MudTd>
        <MudTd DataLabel="Priority">
            <PriorityTypeDropDown SelectedValue="context.PriorityTypeId"
                                  SelectionChanged="(p) => context.PriorityTypeId = p" />
        </MudTd>
        <MudTd DataLabel="Team">@context.Team.DisplayName</MudTd> 
        <MudTd DataLabel="Upgrade">
            <BooleanCheckBox Checked="context.Upgrade"
                             CheckedChanged="(p) => context.Upgrade = p"
                             Label="Is Upgrade" />
        </MudTd>   
        <MudTd DataLabel="EstimatedCost">
            <MudNumericField @bind-Value="context.EstimatedCost" />
        </MudTd>
        <MudTd DataLabel="Status">
            <ProjectStatusTypeDropDown SelectedValue="context.ProjectStatusTypeId"
                                       SelectionChanged="(p) => context.ProjectStatusTypeId = p" />
        </MudTd>
        <MudTd>
             <GridImage Height="75"
                        ImageData="@(ImageService.GetUserImageData(context.MemorabiliaFileName))"
                        ImageLoaded="StateHasChanged"
                        Visible="@(context.MemorabiliaId > 0)"
                        Width="75" />
        </MudTd>
        <MudTd>
             <Fab Color="MudBlazor.Color.Secondary"
                  OnClick="@(_ => context.MemorabiliaId = 0)"
                  Size="MudBlazor.Size.Small"
                  StartIcon="@Icons.Material.Outlined.LinkOff"
                  TooltipText="Remove link to Memorabilia"
                  Visible="@(context.MemorabiliaId > 0)" />
             <Fab Color="MudBlazor.Color.Secondary"
                  OnClick="@(_ => AddMemorabiliaLink(context))"
                  Size="MudBlazor.Size.Small"
                  StartIcon="@Icons.Material.Outlined.AddLink"
                  TooltipText="Link to Memorabilia"
                  Visible="@(context.MemorabiliaId <= 0)" />
        </MudTd>
        <MudTd>
            <HiddenControl Visible="@(context.MemorabiliaId > 0)">
                <ViewMemorabiliaImagesFab MemorabiliaId="context.MemorabiliaId"
                                          Size="MudBlazor.Size.Small" />
            </HiddenControl>
        </MudTd>
         <TableDataRightAligned>
             <DeleteGridButton OnDelete="@(_ => Remove(context.Id, context.Team.Id, context.Rank, context.ItemTypeId))"
                               Size="MudBlazor.Size.Small" />
        </TableDataRightAligned>
    </RowEditingTemplate>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>
