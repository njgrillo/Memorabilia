@using Memorabilia.Blazor.Pages.Autograph
<MudTable Bordered="false"
          CanCancelEdit="true"
          CommitEditTooltip="Save"
          Dense="false"
          Filter="new Func<ProjectMemorabiliaTeamEditModel,bool>(FilterFunc1)"
          Hover="true"
          Items="@Items.Where(item => !item.IsDeleted).OrderBy(item => item.Rank)"
          RowEditCancel="ResetItemToOriginalValues"
          RowEditCommit="UpdateRanks"
          RowEditPreview="BackupItem"
          Striped="true">
    <ToolBarContent>
        <ToolbarTitle Text="Project Teams" />
        <MudSpacer />
        <ToolbarSearchField SearchText="@_search"
                            SearchTextChanged="@((p) => _search = p)" />
    </ToolBarContent>
    <HeaderContent>
        <MudTh></MudTh>
        <MudTh></MudTh>
        <MudTh>
            <MudTableSortLabel SortBy="new Func<ProjectMemorabiliaTeamEditModel, object>(x=>x.Rank)">
                Rank
            </MudTableSortLabel>
        </MudTh>
        <MudTh>
            <MudTableSortLabel SortBy="new Func<ProjectMemorabiliaTeamEditModel, object>(x=>x.PriorityTypeName)">
                Priority
            </MudTableSortLabel>
        </MudTh>
        <MudTh>
            <MudTableSortLabel SortBy="new Func<ProjectMemorabiliaTeamEditModel, object>(x=>x.Team.DisplayName)">
                Team
            </MudTableSortLabel>
        </MudTh>
        <MudTh>
            <MudTableSortLabel SortBy="new Func<ProjectMemorabiliaTeamEditModel, object>(x=>x.Upgrade)">
                Upgrade
            </MudTableSortLabel>
        </MudTh> 
        <MudTh>
            <MudTableSortLabel SortBy="new Func<ProjectMemorabiliaTeamEditModel, object>(x=>x.EstimatedCost)">
                Estimated Cost
            </MudTableSortLabel>
        </MudTh>
        <MudTh>
            <MudTableSortLabel SortBy="new Func<ProjectMemorabiliaTeamEditModel, object>(x=>x.ProjectStatusTypeName)">
                Status
            </MudTableSortLabel>
        </MudTh>
        <MudTh>
            Memorabilia
        </MudTh>
        <MudTh></MudTh>
        <MudTh></MudTh>
        <MudTh></MudTh>
    </HeaderContent>
    <RowTemplate Context="projectMemorabiliaTeam">
        <MudTd>
            <MudIconButton @onclick="@(_ => MoveToTop(projectMemorabiliaTeam.Rank ?? 0))"
                           hidden="@(!projectMemorabiliaTeam.DisplayDoubleUpIcon)"
                           Icon="@projectMemorabiliaTeam.DoubleUpIcon"></MudIconButton>
            <MudIconButton @onclick="@(_ => MoveUp(projectMemorabiliaTeam.Rank ?? 0))"
                           hidden="@(!projectMemorabiliaTeam.DisplayUpIcon)"
                           Icon="@projectMemorabiliaTeam.UpIcon"></MudIconButton>
            <MudIconButton @onclick="@(_ => MoveDown(projectMemorabiliaTeam.Rank ?? 0))"
                           Icon="@projectMemorabiliaTeam.DownIcon"></MudIconButton>
            <MudIconButton @onclick="@(_ => MoveToBottom(projectMemorabiliaTeam.Rank ?? 0))"
                           Icon="@projectMemorabiliaTeam.DoubleDownIcon"></MudIconButton>
        </MudTd>
        <Condition Evaluation="@(!projectMemorabiliaTeam.TemplateImageFileName.IsNullOrEmpty())">
            <Match>
                <MudImage Class="rounded-lg"
                          Elevation="5"
                          Height="200"
                          ObjectFit="@ObjectFit.Cover"
                          Src="@(ImageService.GetDomainImageData(projectMemorabiliaTeam.TemplateImageFileName))"
                          Width="200" />
            </Match>
            <NotMatch>
                <MudTd DataLabel="" />
            </NotMatch>
        </Condition>
        <MudTd DataLabel="Rank">@projectMemorabiliaTeam.Rank</MudTd>
        <MudTd DataLabel="Priority">@projectMemorabiliaTeam.PriorityTypeName</MudTd>
        <MudTd DataLabel="Team">@projectMemorabiliaTeam.Team.DisplayName</MudTd>
        <MudTd DataLabel="Upgrade">@(projectMemorabiliaTeam.Upgrade ? "Yes" : "No")</MudTd>
        <MudTd DataLabel="EstimatedCost">@(projectMemorabiliaTeam.EstimatedCost?.ToString("c") ?? string.Empty)</MudTd>
        <MudTd DataLabel="Status">@projectMemorabiliaTeam.ProjectStatusTypeName</MudTd>
        <MudTd DataLabel="">
            <Condition Evaluation="@(projectMemorabiliaTeam.MemorabiliaId > 0)">
                <Match>
                    <MudImage Class="rounded-lg can-click"
                              Elevation="5"
                              Height="75"
                              ObjectFit="@ObjectFit.Cover"
                              Src="@(ImageService.GetUserImageData(projectMemorabiliaTeam.MemorabiliaFileName))"
                              Width="75" />
                </Match>
            </Condition>
        </MudTd>
        <MudTd DataLabel="">
            <Condition Evaluation="@(projectMemorabiliaTeam.MemorabiliaId > 0)">
                <Match>
                    <MudTooltip Text="Remove link to Memorabilia">
                        <MudFab Color="MudBlazor.Color.Secondary"
                                StartIcon="@Icons.Material.Outlined.LinkOff"
                                OnClick="@(_ => projectMemorabiliaTeam.MemorabiliaId = 0)"
                                Size="@MudBlazor.Size.Small" />
                    </MudTooltip>
                </Match>
                <NotMatch>
                        <MudTooltip Text="Link to Memorabilia">
                        <MudFab Color="MudBlazor.Color.Secondary"
                                StartIcon="@Icons.Material.Outlined.AddLink"
                                OnClick="@(_ => AddMemorabiliaLink(projectMemorabiliaTeam))"
                                Size="@MudBlazor.Size.Small" />
                    </MudTooltip>
                </NotMatch>
            </Condition>
        </MudTd>
        <MudTd DataLabel="">
            <Condition Evaluation="@(projectMemorabiliaTeam.MemorabiliaId > 0)">
                <Match>
                    <ViewMemorabiliaImagesFab MemorabiliaId="projectMemorabiliaTeam.MemorabiliaId"
                                              Size="MudBlazor.Size.Small" />
                </Match>
            </Condition>
        </MudTd>
        <MudTd DataLabel="">
            <DeleteGridButton OnDelete="@(_ => Remove(projectMemorabiliaTeam.Id, projectMemorabiliaTeam.Team.Id, projectMemorabiliaTeam.Rank, projectMemorabiliaTeam.ItemTypeId))"
                              Size="@MudBlazor.Size.Small" />
        </MudTd>
    </RowTemplate>
    <RowEditingTemplate>
        <MudTd>
            <MudIconButton @onclick="@(_ => MoveToTop(context.Rank ?? 0))"
                           hidden="@(!context.DisplayDoubleUpIcon)"
                           Icon="@context.DoubleUpIcon"></MudIconButton>
            <MudIconButton @onclick="@(_ => MoveUp(context.Rank ?? 0))"
                           hidden="@(!context.DisplayUpIcon)"
                           Icon="@context.UpIcon"></MudIconButton>
            <MudIconButton @onclick="@(_ => MoveDown(context.Rank ?? 0))"
                           Icon="@context.DownIcon"></MudIconButton>
            <MudIconButton @onclick="@(_ => MoveToBottom(context.Rank ?? 0))"
                           Icon="@context.DoubleDownIcon"></MudIconButton>
        </MudTd>
        <MudTd DataLabel="Rank">
            <MudNumericField @bind-Value="@context.Rank" Required Min="1" />
        </MudTd>
        <MudTd DataLabel="Priority">
            <PriorityTypeDropDown SelectedValue="@context.PriorityTypeId"
                                  SelectionChanged="(p) => context.PriorityTypeId = p" />
        </MudTd>
        <MudTd DataLabel="Team">@context.Team.DisplayName</MudTd> 
        <MudTd DataLabel="Upgrade">
            <BooleanCheckBox Checked="@context.Upgrade"
                             CheckedChanged="(p) => context.Upgrade = p"
                             Label="Is Upgrade" />
        </MudTd>   
        <MudTd DataLabel="EstimatedCost">
            <MudNumericField @bind-Value="@context.EstimatedCost" />
        </MudTd>
        <MudTd DataLabel="Status">
            <ProjectStatusTypeDropDown SelectedValue="@context.ProjectStatusTypeId"
                                       SelectionChanged="(p) => context.ProjectStatusTypeId = p" />
        </MudTd>
        <MudTd DataLabel="">
                <Condition Evaluation="@(context.MemorabiliaId > 0)">
                <Match>
                    <MudImage Class="rounded-lg"
                              Elevation="5"
                              Height="75"
                              ObjectFit="@ObjectFit.Cover"                              
                              Src="@(ImageService.GetUserImageData(context.MemorabiliaFileName))"
                              Width="75" />                      
                </Match>
            </Condition>            
        </MudTd>
        <MudTd DataLabel="">
                <Condition Evaluation="@(context.MemorabiliaId > 0)">
                <Match>
                    <MudTooltip Text="Remove link to Memorabilia">
                        <MudFab Color="MudBlazor.Color.Secondary"
                                StartIcon="@Icons.Material.Outlined.LinkOff"
                                OnClick="@(_ => context.MemorabiliaId = 0)"
                                Size="@MudBlazor.Size.Small" />
                    </MudTooltip>                    
                </Match>
                <NotMatch>
                    <MudTooltip Text="Link to Memorabilia">
                        <MudFab Color="MudBlazor.Color.Secondary"
                                StartIcon="@Icons.Material.Outlined.AddLink"
                                OnClick="@(_ => AddMemorabiliaLink(context))"
                                Size="@MudBlazor.Size.Small" />
                    </MudTooltip>                   
                </NotMatch>
            </Condition>            
        </MudTd>
        <MudTd DataLabel="">
            <Condition Evaluation="@(context.MemorabiliaId > 0)">
                <Match>
                    <ViewMemorabiliaImagesFab MemorabiliaId="context.MemorabiliaId"
                                              Size="MudBlazor.Size.Small" />
                </Match>
            </Condition>
        </MudTd>
        <MudTd DataLabel="">
             <DeleteGridButton OnDelete="@(_ => Remove(context.Id, context.Team.Id, context.Rank, context.ItemTypeId))"
                               Size="@MudBlazor.Size.Small" />
        </MudTd>
    </RowEditingTemplate>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>
