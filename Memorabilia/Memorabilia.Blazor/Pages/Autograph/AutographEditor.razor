@inherits AutographItem<SaveAutographViewModel>

<EditPage ContinueNavigationPath="@ViewModel.ContinueNavigationPath"
          EditMode="ViewModel.EditModeType"
          ExitNavigationPath="@ViewModel.ExitNavigationPath"
          ImagePath="@ViewModel.ImagePath"
          ItemName="@ViewModel.ItemTypeName"
          Model="ViewModel"
          OnLoad="OnLoad"
          OnSave="OnSave"
          PageFooterButtonText="@ViewModel.ExitButtonText"
          PageFooterNavigationPath="@ViewModel.BackNavigationPath"
          PageTitle="@ViewModel.PageTitle"
          TItem="SaveAutographViewModel"
          UseMultipleButtons="true">
    <TimelineContent>
        <AutographTimeline AutographId="ViewModel.Id" 
                           AutographStep="ViewModel.AutographStep"  
                           DisplaySpot="ViewModel.CanHaveSpot" 
                           EditMode="ViewModel.EditModeType"
                           MemorabiliaId="ViewModel.MemorabiliaId" />
    </TimelineContent>
    <Content>
        <DivRowCol6>
            <Content>
                <MudTooltip Text="Import from memorabilia item">
                    <MudImage @onclick="@(_ => ViewModel.Person = new SavePersonViewModel(ViewModel.MemorabiliaPerson))"
                              hidden="@(!_displayPersonImport)" 
                              Class="rounded-lg can-click" 
                              Elevation="5" 
                              Height="20"                                              
                              ObjectFit="@ObjectFit.Cover"
                              Src="images/import.jpg"
                              Width="20" />
                </MudTooltip>
                <PersonSelector SelectedPerson="ViewModel.Person"
                                SelectedPersonChanged="(p) => ViewModel.Person = p" />  
            </Content>
        </DivRowCol6>
        <DivRowCol3>
            <Content>
                <BooleanCheckBox Checked="@ViewModel.FullName"
                                 CheckedChanged="(p) => ViewModel.FullName = p"  
                                 Label="Is Full Name" />
            </Content>
        </DivRowCol3>
        <DivRowCol3>
            <Content>
                <BooleanCheckBox Checked="@ViewModel.IsPersonalized"
                                 CheckedChanged="(p) => ViewModel.IsPersonalized = p"  
                                 Label="Has Personalization" />
                <DivHidden Hidden="@(!ViewModel.IsPersonalized)">
                    <Content>
                        <TextField HelperText="Example: To Nick" 
                                   Label="Personalization Text"
                                   SelectedText="@ViewModel.PersonalizationText"
                                   SelectedTextChanged="@((p) => ViewModel.PersonalizationText = p)"/>
                    </Content>
                </DivHidden>
            </Content>
        </DivRowCol3>
        <DivRowCol3>
            <Content>
                <WritingInstrumentDropDown SelectedValue="ViewModel.WritingInstrumentId"
                                           SelectionChanged="(p) => ViewModel.WritingInstrumentId = p" />
            </Content>
            <ContentColumn2>
                <ConditionDropDown SelectedValue="ViewModel.ConditionId"
                                   SelectionChanged="(p) => ViewModel.ConditionId = p" />
            </ContentColumn2>
            <ContentColumn3>
                <PrettyBlazor.Condition Evaluation="ViewModel.DisplayAcquisitionDetails">
                    <Match>
                        <BooleanCheckBox Checked="@ViewModel.IsEstimatedValueFromMemorabilia"
                                         CheckedChanged="(p) => ViewModel.IsEstimatedValueFromMemorabilia = p"
                                         Label="Estimated Value same as Memorabilia" />
                    </Match>
                </PrettyBlazor.Condition>  
            </ContentColumn3>
            <ContentColumn4>
                <PrettyBlazor.Condition Evaluation="ViewModel.DisplayAcquisitionDetails">
                    <Match>
                        <BooleanCheckBox CheckedChanged="(p) => AcquisitionDetailsCheckboxClicked(p)"
                                         Label="Acquisition Details same as Memorabilia" />  
                    </Match>
                </PrettyBlazor.Condition>  
            </ContentColumn4>
        </DivRowCol3>
        <DivRowCol3>
            <Content>
                <ColorDropDown SelectedValue="ViewModel.ColorId"
                               SelectionChanged="(p) => ViewModel.ColorId = p" />
            </Content>
            <ContentColumn2>    
                <NullableIntField Label="Grade" 
                                  Value="ViewModel.Grade"
                                  ValueChanged="@((p) => ViewModel.Grade = p)" />
            </ContentColumn2>
            <ContentColumn3>
                <PrettyBlazor.Condition Evaluation="ViewModel.DisplayAcquisitionDetails">
                    <Match>
                        <NullableDecimalField Label="Estimated Value ($)"
                                              Value="ViewModel.EstimatedValue"
                                              ValueChanged="@((p) => ViewModel.EstimatedValue = p)" />
                    </Match>
                </PrettyBlazor.Condition>
            </ContentColumn3>
            <ContentColumn4>
                <PrettyBlazor.Condition Evaluation="ViewModel.DisplayAcquisitionDetails">
                    <Match>
                        <MudTooltip Text="Import from memorabilia item">
                            <MudImage @onclick="OnImportAcquisitionClick"
                                      hidden="@(!_displayPersonImport)" 
                                      Class="rounded-lg can-click" 
                                      Elevation="5" 
                                      Height="20"                                              
                                      ObjectFit="@ObjectFit.Cover"
                                      Src="images/import.jpg"
                                      Width="20" />
                        </MudTooltip>
                        <AcquisitionTypeDropDown IsAutograph="true" 
                                                 SelectedValue="ViewModel.AcquisitionTypeId"
                                                 SelectionChanged="(p) => ViewModel.AcquisitionTypeId = p" />
                    </Match>
                </PrettyBlazor.Condition>
            </ContentColumn4>
        </DivRowCol3>
        <DivRowCol3>
            <ContentColumn4>
                <PrettyBlazor.Condition Evaluation="ViewModel.DisplayAcquisitionDetails && _displayAcquisitionDetails">
                    <Match>
                        <DatePicker Label="Acquired Date"
                                    SelectedDate="ViewModel.AcquiredDate"
                                    SelectedDateChanged="@((p) => ViewModel.AcquiredDate = p)" />
                    </Match>
                </PrettyBlazor.Condition>
            </ContentColumn4>
        </DivRowCol3>
        <DivRowCol3>
            <ContentColumn4>
                <PrettyBlazor.Condition Evaluation="ViewModel.DisplayAcquisitionDetails && _displayAcquisitionDetails">
                    <Match>
                        <NullableDecimalField Label="Cost ($)" 
                                              Value="ViewModel.Cost"
                                              ValueChanged="@((p) => ViewModel.Cost = p)" />
                    </Match>
                </PrettyBlazor.Condition>
            </ContentColumn4>
        </DivRowCol3>
        <DivRowCol3>
            <ContentColumn4>
                <PrettyBlazor.Condition Evaluation="ViewModel.DisplayAcquisitionDetails && _displayAcquisitionDetails">
                    <Match>
                        <DivHidden Hidden="@(!ViewModel.CanHavePlaceOfPurchase)">
                            <Content>
                                <PurchaseTypeDropDown SelectedValue="ViewModel.PurchaseTypeId"
                                                      SelectionChanged="(p) => ViewModel.PurchaseTypeId = p" />
                            </Content>
                        </DivHidden>
                    </Match>
                </PrettyBlazor.Condition>
            </ContentColumn4>
        </DivRowCol3>
        <DivRowCol3>
            <ContentColumn4>
                <PrettyBlazor.Condition Evaluation="ViewModel.DisplayAcquisitionDetails && ViewModel.DisplayThroughTheMailDetails">
                    <Match>
                        <DatePicker Label="Sent Date"
                                    SelectedDate="ViewModel.SentDate"
                                    SelectedDateChanged="@((p) => ViewModel.SentDate = p)" />
                    </Match>
                </PrettyBlazor.Condition>
            </ContentColumn4>
        </DivRowCol3>
        <DivRowCol3>
            <ContentColumn4>
                <PrettyBlazor.Condition Evaluation="ViewModel.DisplayAcquisitionDetails && ViewModel.DisplayThroughTheMailDetails">
                    <Match>
                        <DatePicker Label="Received Date"
                                    SelectedDate="ViewModel.ReceivedDate"
                                    SelectedDateChanged="@((p) => ViewModel.ReceivedDate = p)" />
                    </Match>
                </PrettyBlazor.Condition>
            </ContentColumn4>
        </DivRowCol3>
        <DivRowCol3>
            <Content>
                <BooleanCheckBox Checked="@ViewModel.IsNumbered"
                                 CheckedChanged="(p) => ViewModel.IsNumbered = p"  
                                 Label="Numbered" /> 
            </Content>
        </DivRowCol3>
        <DivRowCol1 Hidden="@(!ViewModel.IsNumbered)">
            <Content>
                <NullableIntField Label="Numerator"
                                  Value="ViewModel.Numerator"
                                  ValueChanged="@((p) => ViewModel.Numerator = p)" />
            </Content>
            <ContentColumn2>
                <label for="of">of</label>  
            </ContentColumn2>
            <ContentColumn3>
                <NullableIntField Label="Denominator"
                                  Value="ViewModel.Denominator"
                                  ValueChanged="@((p) => ViewModel.Denominator = p)" />
            </ContentColumn3>
        </DivRowCol1> 
        <DivRowCol3>
            <Content>
                <TextField Label="Note"
                           Lines="10"
                           SelectedText="@ViewModel.Note"
                           SelectedTextChanged="@((p) => ViewModel.Note = p)"/>
            </Content>
        </DivRowCol3>
    </Content>
</EditPage>