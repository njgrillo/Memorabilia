@inherits AutographItem<SaveAuthenticationViewModel>

<EditPage ContinueNavigationPath="@AuthenticationsViewModel.ContinueNavigationPath"
          DomainImageRootPath="@DomainImageRootPath"
          EditMode="AuthenticationsViewModel.EditModeType"
          ExitNavigationPath="@AuthenticationsViewModel.ExitNavigationPath"
          ImageFileName="@AuthenticationsViewModel.ImageFileName"
          ItemName="@AuthenticationsViewModel.PageTitle"
          Model="AuthenticationsViewModel"
          OnLoad="OnLoad"
          OnSave="OnSave"
          PageFooterButtonText="@AuthenticationsViewModel.ExitButtonText"
          PageFooterNavigationPath="@AuthenticationsViewModel.BackNavigationPath"
          PageTitle="@AuthenticationsViewModel.PageTitle"
          TItem="SaveAuthenticationsViewModel"
          UseMultipleButtons="true">
    <TimelineContent>
        <AutographTimeline AutographId="AuthenticationsViewModel.AutographId" 
                           AutographStep="AuthenticationsViewModel.AutographStep"  
                           DisplaySpot="AuthenticationsViewModel.CanHaveSpot" 
                           EditMode="AuthenticationsViewModel.EditModeType"
                           MemorabiliaId="AuthenticationsViewModel.MemorabiliaId"/>
    </TimelineContent>
    <Content>
        <DivRowCol4>
            <Content>
                <AuthenticationCompanyDropDown Disabled="@(!_canEditAuthenticationCompany)"
                                               SelectedValue="ViewModel.AuthenticationCompanyId"
                                               SelectionChanged="(p) => ViewModel.AuthenticationCompanyId = p" />
            </Content>
        </DivRowCol4>
        <DivRowCol4>
            <Content>
                <TextField Label="Verification"
                           SelectedText="@ViewModel.Verification"
                           SelectedTextChanged="@((p) => ViewModel.Verification = p)" />
            </Content>
        </DivRowCol4>
        <DivRowCol2>
            <Content>
                <BooleanCheckBox Checked="@ViewModel.HasHologram"
                                 CheckedChanged="(p) => ViewModel.HasHologram = p"
                                 Label="Has Hologram" /> 
            </Content>
            <ContentColumn2>
                <BooleanCheckBox Checked="@ViewModel.HasCertificationCard"
                                 CheckedChanged="(p) => ViewModel.HasCertificationCard = p"
                                 Label="Has Certification Card" />
            </ContentColumn2>
        </DivRowCol2>
        <DivRowCol2>
            <Content>
                <BooleanCheckBox Checked="@ViewModel.HasLetter"
                                 CheckedChanged="(p) => ViewModel.HasLetter = p"
                                 Label="Has Letter" />
            </Content>
            <ContentColumn2>
                <BooleanCheckBox Checked="@ViewModel.Witnessed"
                                 CheckedChanged="(p) => ViewModel.Witnessed = p"
                                 Label="Witnessed" /> 
            </ContentColumn2>
        </DivRowCol2>
        <DivLeftAlign>
            <Content>
                <MudButton hidden="@(!_canAddAuthentication)"
                           ButtonType="MudBlazor.ButtonType.Button" 
                           Color="MudBlazor.Color.Secondary"
                           OnClick="AddAuthentication"
                           Size="MudBlazor.Size.Medium"                                  
                           Variant="Variant.Filled">Add</MudButton>
                <MudButton hidden="@(!_canUpdateAuthentication)"
                           ButtonType="MudBlazor.ButtonType.Button" 
                           Color="MudBlazor.Color.Secondary"
                           OnClick="UpdateAuthentication"
                           Size="MudBlazor.Size.Medium"                                  
                           Variant="Variant.Filled">Update</MudButton>
            </Content>
        </DivLeftAlign>        
        <DivRowCol12>
            <Content>
                <MudTable Bordered="false"
                          Dense="false" 
                          Hover="true"
                          Items="@AuthenticationsViewModel.Authentications.Where(authentication => !authentication.IsDeleted)"    
                          Striped="true">
                    <ToolBarContent>
                        <MudText Typo="Typo.h6">Authentications</MudText>
                    </ToolBarContent>
                    <HeaderContent>
                        <MudTh>Authentication Company</MudTh>
                        <MudTh>Has Certification Card</MudTh>
                        <MudTh>Has Hologram</MudTh>
                        <MudTh>Has Letter</MudTh>
                        <MudTh>Verification</MudTh>
                        <MudTh>Witnessed</MudTh>
                        <MudTh></MudTh>
                    </HeaderContent>
                    <RowTemplate Context="authentication">
                        <MudTd DataLabel="Authentication Company">
                            <PrettyBlazor.Condition Evaluation="authentication.CanNavigateToWebsite">
                                <Match>
                                    <MudLink Href="@(authentication.VerificationWebsiteLink)" Target="_blank">@authentication.VerificationWebsiteLinkText</MudLink>
                                </Match>
                                <NotMatch>
                                    @authentication.AuthenticationCompanyName
                                </NotMatch>
                            </PrettyBlazor.Condition>                            
                         </MudTd>
                        <MudTd DataLabel="Has Certification Card">@(authentication.HasCertificationCard ? "Yes" : "No")</MudTd>
                        <MudTd DataLabel="Has Hologram">@(authentication.HasHologram ? "Yes" : "No")</MudTd>
                        <MudTd DataLabel="Has Letter">@(authentication.HasLetter ? "Yes" : "No")</MudTd>
                        <MudTd DataLabel="Verification">@authentication.Verification</MudTd>
                        <MudTd DataLabel="Witnessed">@(authentication.Witnessed ? "Yes" : "No")</MudTd>
                        <MudTd DataLabel="">
                            <MudTooltip Text="Edit">
                                <MudFab Color="MudBlazor.Color.Primary"                                
                                        Icon="@Icons.Outlined.ModeEditOutline"
                                        OnClick="@(_ => Edit(authentication))" />
                            </MudTooltip>   
                            <MudTooltip Text="Delete">
                                <MudFab Color="MudBlazor.Color.Secondary"
                                        Icon="@Icons.Outlined.DeleteOutline"
                                        OnClick="@(_ => authentication.IsDeleted = true)" />
                            </MudTooltip>
                        </MudTd>
                    </RowTemplate>
                </MudTable>
            </Content>
        </DivRowCol12>  
        <br />
    </Content>
</EditPage>