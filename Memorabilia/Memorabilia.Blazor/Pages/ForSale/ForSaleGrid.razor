<MudTable @ref="_table"
          Bordered="false"
          CanCancelEdit="true"
          CommitEditTooltip="Save"
          Dense="false"
          Hover="true"
          Items="Model.Items"
          RowEditCancel="ResetItemToOriginalValues"
          RowEditPreview="BackupItem"
          ServerData="@(new Func<TableState, Task<TableData<ForSaleMemorabiliaEditModel>>>(OnRead))"
          Striped="true"
          Style="@Style.Width100Percent">
    <NoRecordsContent>
        <NoRecords Text="No Memorabilia For Sale" />
    </NoRecordsContent>
    <ToolBarContent>
        <Stack Style="@($"{Style.MarginLeftPad1}{Style.MarginTopPad1}")">
            <ToolbarTitle Text="Memorabilia" />
            <RowStack>
                <CustomButton ButtonType="ButtonType.Button"
                              OnClick="OnSelectAll"
                              Text="@SelectAllButtonText"
                              Visible="Model.Items.Any()" />
                <CustomButton ButtonType="ButtonType.Button"
                              OnClick="RemoveSelected"
                              Text="Remove Selected"
                              Visible="SelectedMemorabilia.Any()" />
            </RowStack>
        </Stack>
    </ToolBarContent>
    <HeaderContent>
        <MudTh></MudTh>
        <MudTh></MudTh>
        <MudTh></MudTh>
        <MudTh>Item</MudTh>
        <MudTh>Buy Now Price</MudTh>
        <MudTh>Allow Best Offer</MudTh>
        <MudTh>Minimum Offer Price</MudTh>
        <MudTh></MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd>
            <BooleanCheckBox Checked="@(SelectedMemorabilia.Contains(context))"
                             CheckedChanged="(p) => OnMemorabiliaSelected(context)" />
        </MudTd>
        <MudTd>
            <ToggleGridButton Toggled="@(_ => ToggleChildContent(context.Id))"
                              Visible="@(context.MemorabiliaItem.AutographsCount > 0)" />
        </MudTd>
        <MudTd>
            <GridImage ImageFileName="@context.MemorabiliaPrimaryImage"
                       ImageLoaded="StateHasChanged"
                       NavigationPath="@($"{NavigationPath.MemorabiliaImage}/{Constant.EditModeType.Update.Name}/{DataProtectorService.EncryptId(context.MemorabiliaId)}")" />
        </MudTd>
        <MudTd DataLabel="Item">@context.ItemTypeName</MudTd>
        <MudTd DataLabel="BuyNowPrice">@(context.BuyNowPrice?.ToString("c") ?? string.Empty)</MudTd>
        <MudTd DataLabel="AllowBestOffer">@(context.AllowBestOffer ? "Yes" : "No")</MudTd>
        <MudTd DataLabel="MinimumOfferPrice">@(context.MinimumOfferPrice?.ToString("c") ?? string.Empty)</MudTd>
        <TableDataRightAligned>
            <ViewMemorabiliaImagesFab MemorabiliaId="context.Memorabilia.Id" />
            <Fab Color="MudBlazor.Color.Secondary"
                 OnClick="@(_ => ShowRemoveSaleMemorabiliaConfirm(context.Id))"
                 Size="@MudBlazor.Size.Small"
                 StartIcon="@Icons.Material.Outlined.DeleteOutline"
                 TooltipText="Remove From Sell List" />
        </TableDataRightAligned>
    </RowTemplate>
    <RowEditingTemplate>
        <MudTd>
            <BooleanCheckBox Checked="@(SelectedMemorabilia.Contains(context))"
                             CheckedChanged="(p) => OnMemorabiliaSelected(context)" />
        </MudTd>
        <MudTd>
            <ToggleGridButton Toggled="@(_ => ToggleChildContent(context.Id))"
                              Visible="@(context.MemorabiliaItem.AutographsCount > 0)" />
        </MudTd>
        <MudTd>
            <GridImage ImageFileName="@context.MemorabiliaPrimaryImage"
                       ImageLoaded="StateHasChanged" />
        </MudTd>
        <MudTd DataLabel="Item">@context.ItemTypeName</MudTd>
        <MudTd DataLabel="BuyNowPrice">
            <NullableDecimalField Value="@context.BuyNowPrice"
                                  ValueChanged="@((p) => context.BuyNowPrice = p)" />
        </MudTd>
        <MudTd DataLabel="AllowBestOffer">
            <Switch Checked="@context.AllowBestOffer"
                    CheckedChanged="(p) => OnAllowBestOfferChanged(context, p)"
                    Label="Allow Best Offer?" />
        </MudTd>
        <MudTd DataLabel="MinimumOfferPrice">
            <NullableDecimalField Disabled="@(!context.CanEditMinimumOfferPrice)" 
                                  Value="@context.MinimumOfferPrice"
                                  ValueChanged="@((p) => context.MinimumOfferPrice = p)" />
        </MudTd>
        <TableDataRightAligned>
            <ViewMemorabiliaImagesFab CanClick="false" 
                                      MemorabiliaId="context.MemorabiliaId" />
            <Fab Color="MudBlazor.Color.Secondary"
                 Size="MudBlazor.Size.Small"
                 StartIcon="@Icons.Material.Outlined.DeleteOutline"
                 TooltipText="Remove From Sell List" />
        </TableDataRightAligned>
    </RowEditingTemplate>
    <ChildRowContent>
        <HiddenControl Visible="context.DisplayAutographDetails">
            <tr />
            <SummarySection>
                <TableDataCentered>
                    Summary: Autographs - <strong> @context.MemorabiliaItem.AutographsCount </strong>, Total Value - <strong> @context.MemorabiliaItem.FormattedTotalValue </strong>, Total Cost - <strong> @context.MemorabiliaItem..FormattedTotalCost </strong>
                </TableDataCentered>
            </SummarySection>
            <tr />
            <TableRowPadded>
                <TableDataSpan>
                    <MudTable Bordered="false"
                              Dense="false"
                              Hover="true"
                              Items="context.MemorabiliaItem.Autographs"
                              Striped="true">
                        <ToolBarContent>
                            <ToolbarTitle Text="Autographs" />
                            <MudSpacer />
                        </ToolBarContent>
                        <HeaderContent>
                            <MudTh></MudTh>
                            <MudTh>Person</MudTh>
                            <MudTh>Condition</MudTh>
                            <MudTh>Value</MudTh>
                            <MudTh>Acquisition Type</MudTh>
                            <MudTh>Acquired Date</MudTh>
                            <MudTh>Cost</MudTh>
                            <MudTh>Purchase Place</MudTh>
                            <MudTh>Writing Instrument</MudTh>
                            <MudTh>Color</MudTh>
                            <MudTh>Authentications</MudTh>
                            <MudTh>Inscriptions</MudTh>
                            <MudTh></MudTh>
                        </HeaderContent>
                        <RowTemplate Context="autograph">
                            <MudTd DataLabel="Name">
                                <PersonGridImage ImageData="@(ImageService.GetPersonImageData(autograph.PersonImageName))"
                                                 ImageLoaded="StateHasChanged"
                                                 PersonId="autograph.Person.Id" />
                            </MudTd>
                            <MudTd DataLabel="Abbreviation">@autograph.PersonName</MudTd>
                            <MudTd DataLabel="Condition">@autograph.ConditionName</MudTd>
                            <MudTd DataLabel="Value">@autograph.FormattedEstimatedValue</MudTd>
                            <MudTd DataLabel="Acquisition Type">@autograph.AcquisitionTypeName</MudTd>
                            <MudTd DataLabel="Acquired Date">@autograph.FormattedAcquisitionDate</MudTd>
                            <MudTd DataLabel="Cost">@autograph.FormattedCost</MudTd>
                            <MudTd DataLabel="Purchase Place">@autograph.PurchaseTypeName</MudTd>
                            <MudTd DataLabel="Writing Instrument">@autograph.WritingInstrumentName</MudTd>
                            <MudTd DataLabel="Color">@autograph.ColorName</MudTd>
                            <MudTd DataLabel="Authentications"
                                   Style="text-align:center">
                                <Chip Color="MudBlazor.Color.Info"
                                      OnClick="@(_ => NavigationManager.NavigateTo($"{NavigationPath.Authentications}/{Constant.EditModeType.Update.Name}/{DataProtectorService.EncryptId(autograph.Id)}"))"
                                      Size="MudBlazor.Size.Small"
                                      Text="@autograph.AuthenticationText"
                                      TooltipText="@autograph.AuthenticationTooltip" />
                            </MudTd>
                            <MudTd DataLabel="Inscriptions"
                                   Style="text-align:center">
                                <Chip Color="MudBlazor.Color.Info"
                                      OnClick="@(_ => NavigationManager.NavigateTo($"{NavigationPath.Inscriptions}/{Constant.EditModeType.Update.Name}/{DataProtectorService.EncryptId(autograph.Id)}"))"
                                      Size="MudBlazor.Size.Small"
                                      Text="@autograph.InscriptionText"
                                      TooltipText="@autograph.InscriptionTooltip" />
                            </MudTd>
                            <TableDataRightAligned>
                                <ViewAutographImagesFab AutographId="autograph.Id" />
                            </TableDataRightAligned>
                        </RowTemplate>
                        <PagerContent>
                            <MudTablePager />
                        </PagerContent>
                    </MudTable>
                </TableDataSpan>
            </TableRowPadded>
        </HiddenControl>
    </ChildRowContent>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>
<Div Visible="Model.Items.Any()">
    <LeftRightSection Style="@($"{Style.MarginBottomPad1}{Style.MarginTopPad1}")">
        <Right>
            <SaveButton OnClick="OnSave"
                        Text="Save" />
        </Right>
    </LeftRightSection>
</Div>

